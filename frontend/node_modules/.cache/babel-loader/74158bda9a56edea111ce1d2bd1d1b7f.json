{"ast":null,"code":"import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes) {\n  let {\n    delay = 0,\n    duration = 300,\n    repeat = 0,\n    repeatType = \"loop\",\n    ease = \"easeInOut\",\n    times\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keyframeOptions = {\n    [valueName]: keyframes\n  };\n  if (times) keyframeOptions.offset = times;\n  const easing = mapEasingToNativeEasing(ease, duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n\n  if (statsBuffer.value) {\n    activeAnimations.waapi++;\n  }\n\n  const animation = element.animate(keyframeOptions, {\n    delay,\n    duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n\n  if (statsBuffer.value) {\n    animation.finished.finally(() => {\n      activeAnimations.waapi--;\n    });\n  }\n\n  return animation;\n}\n\nexport { startWaapiAnimation };","map":{"version":3,"names":["mapEasingToNativeEasing","activeAnimations","statsBuffer","startWaapiAnimation","element","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","offset","easing","Array","isArray","value","waapi","animation","animate","fill","iterations","direction","finished","finally"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs"],"sourcesContent":["import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,YAAxC;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA6J;EAAA,IAAjG;IAAEC,KAAK,GAAG,CAAV;IAAaC,QAAQ,GAAG,GAAxB;IAA6BC,MAAM,GAAG,CAAtC;IAAyCC,UAAU,GAAG,MAAtD;IAA8DC,IAAI,GAAG,WAArE;IAAkFC;EAAlF,CAAiG,uEAAJ,EAAI;EACzJ,MAAMC,eAAe,GAAG;IAAE,CAACR,SAAD,GAAaC;EAAf,CAAxB;EACA,IAAIM,KAAJ,EACIC,eAAe,CAACC,MAAhB,GAAyBF,KAAzB;EACJ,MAAMG,MAAM,GAAGf,uBAAuB,CAACW,IAAD,EAAOH,QAAP,CAAtC;EACA;AACJ;AACA;;EACI,IAAIQ,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EACIF,eAAe,CAACE,MAAhB,GAAyBA,MAAzB;;EACJ,IAAIb,WAAW,CAACgB,KAAhB,EAAuB;IACnBjB,gBAAgB,CAACkB,KAAjB;EACH;;EACD,MAAMC,SAAS,GAAGhB,OAAO,CAACiB,OAAR,CAAgBR,eAAhB,EAAiC;IAC/CN,KAD+C;IAE/CC,QAF+C;IAG/CO,MAAM,EAAE,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,GAAyBA,MAAzB,GAAkC,QAHK;IAI/CO,IAAI,EAAE,MAJyC;IAK/CC,UAAU,EAAEd,MAAM,GAAG,CAL0B;IAM/Ce,SAAS,EAAEd,UAAU,KAAK,SAAf,GAA2B,WAA3B,GAAyC;EANL,CAAjC,CAAlB;;EAQA,IAAIR,WAAW,CAACgB,KAAhB,EAAuB;IACnBE,SAAS,CAACK,QAAV,CAAmBC,OAAnB,CAA2B,MAAM;MAC7BzB,gBAAgB,CAACkB,KAAjB;IACH,CAFD;EAGH;;EACD,OAAOC,SAAP;AACH;;AAED,SAASjB,mBAAT"},"metadata":{},"sourceType":"module"}