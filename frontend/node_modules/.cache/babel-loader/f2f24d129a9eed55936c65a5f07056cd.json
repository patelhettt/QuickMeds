{"ast":null,"code":"import { noop } from 'motion-utils';\nimport { useContext, useRef, useInsertionEffect } from 'react';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useSpring(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    isStatic\n  } = useContext(MotionConfigContext);\n  const activeSpringAnimation = useRef(null);\n  const initialValue = useConstant(() => isMotionValue(source) ? source.get() : source);\n  const unit = useConstant(() => typeof initialValue === \"string\" ? initialValue.replace(/[\\d.-]/g, \"\") : undefined);\n  const value = useMotionValue(initialValue);\n  const latestValue = useRef(initialValue);\n  const latestSetter = useRef(noop);\n\n  const startAnimation = () => {\n    stopAnimation();\n    activeSpringAnimation.current = animateValue({\n      keyframes: [asNumber(value.get()), asNumber(latestValue.current)],\n      velocity: value.getVelocity(),\n      type: \"spring\",\n      restDelta: 0.001,\n      restSpeed: 0.01,\n      ...config,\n      onUpdate: latestSetter.current\n    });\n  };\n\n  const stopAnimation = () => {\n    if (activeSpringAnimation.current) {\n      activeSpringAnimation.current.stop();\n    }\n  };\n\n  useInsertionEffect(() => {\n    return value.attach((v, set) => {\n      if (isStatic) return set(v);\n      latestValue.current = v;\n\n      latestSetter.current = latest => set(parseValue(latest, unit));\n\n      frame.postRender(startAnimation);\n      return value.get();\n    }, stopAnimation);\n  }, [JSON.stringify(config)]);\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(source)) {\n      return source.on(\"change\", v => value.set(parseValue(v, unit)));\n    }\n  }, [value, unit]);\n  return value;\n}\n\nfunction parseValue(v, unit) {\n  return unit ? v + unit : v;\n}\n\nfunction asNumber(v) {\n  return typeof v === \"number\" ? v : parseFloat(v);\n}\n\nexport { useSpring };","map":{"version":3,"names":["noop","useContext","useRef","useInsertionEffect","animateValue","MotionConfigContext","useConstant","useIsomorphicLayoutEffect","useMotionValue","isMotionValue","frame","useSpring","source","config","isStatic","activeSpringAnimation","initialValue","get","unit","replace","undefined","value","latestValue","latestSetter","startAnimation","stopAnimation","current","keyframes","asNumber","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","stop","attach","v","set","latest","parseValue","postRender","JSON","stringify","on","parseFloat"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/node_modules/framer-motion/dist/es/value/use-spring.mjs"],"sourcesContent":["import { noop } from 'motion-utils';\nimport { useContext, useRef, useInsertionEffect } from 'react';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const initialValue = useConstant(() => isMotionValue(source) ? source.get() : source);\n    const unit = useConstant(() => typeof initialValue === \"string\"\n        ? initialValue.replace(/[\\d.-]/g, \"\")\n        : undefined);\n    const value = useMotionValue(initialValue);\n    const latestValue = useRef(initialValue);\n    const latestSetter = useRef(noop);\n    const startAnimation = () => {\n        stopAnimation();\n        activeSpringAnimation.current = animateValue({\n            keyframes: [asNumber(value.get()), asNumber(latestValue.current)],\n            velocity: value.getVelocity(),\n            type: \"spring\",\n            restDelta: 0.001,\n            restSpeed: 0.01,\n            ...config,\n            onUpdate: latestSetter.current,\n        });\n    };\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            if (isStatic)\n                return set(v);\n            latestValue.current = v;\n            latestSetter.current = (latest) => set(parseValue(latest, unit));\n            frame.postRender(startAnimation);\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseValue(v, unit)));\n        }\n    }, [value, unit]);\n    return value;\n}\nfunction parseValue(v, unit) {\n    return unit ? v + unit : v;\n}\nfunction asNumber(v) {\n    return typeof v === \"number\" ? v : parseFloat(v);\n}\n\nexport { useSpring };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}