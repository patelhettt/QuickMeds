{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aweso\\\\OneDrive\\\\Desktop\\\\QuickMeds\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Products\\\\NonPharmacyProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SaveButton from '../../../components/buttons/SaveButton';\nimport CancelButton from '../../../components/buttons/CancelButton';\nimport PrintButton from '../../../components/buttons/PrintButton';\nimport NewButton from '../../../components/buttons/NewButton';\nimport Input from '../../../components/form/Input';\nimport Select from '../../../components/form/Select';\nimport DoubleInput from '../../../components/form/DoubleInput';\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\nimport ModalHeading from '../../../components/headings/ModalHeading';\nimport RefreshButton from '../../../components/buttons/RefreshButton';\nimport TableRow from '../../../components/TableRow';\nimport EditButton from '../../../components/buttons/EditButton';\nimport DeleteButton from '../../../components/buttons/DeleteButton';\nimport { toast } from 'react-toastify';\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\nimport AddModal from '../../../components/modals/AddModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy';\n\nconst NonPharmacyProducts = () => {\n  _s();\n\n  const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState(null); // Function to handle opening the modal\n\n  const handleOpenModal = () => {\n    // Check if dropdown data is loaded\n    if (categories.length === 0 || companies.length === 0) {\n      // If data isn't loaded yet, fetch it first\n      fetchDropdownData();\n      toast.info(\"Loading form data...\");\n    }\n\n    document.getElementById('create-new-product').checked = true;\n  }; // Function to handle opening the edit modal\n\n\n  const handleOpenEditModal = productId => {\n    // Find the product to edit\n    const productToEdit = nonPharmacyProducts.find(product => product._id === productId);\n\n    if (productToEdit) {\n      setCurrentProduct(productToEdit); // Check if dropdown data is loaded\n\n      if (categories.length === 0 || companies.length === 0) {\n        fetchDropdownData();\n      }\n\n      document.getElementById('edit-product').checked = true;\n    } else {\n      toast.error(\"Product not found\");\n    }\n  }; // Function to handle refresh\n\n\n  const handleRefresh = () => {\n    fetchProducts(currentPage, productsPerPage);\n  }; // Separate function to fetch dropdown data\n\n\n  const fetchDropdownData = async () => {\n    try {\n      const [categoriesRes, companiesRes] = await Promise.all([fetch(`http://localhost:5000/api/setup/categories`), fetch(`http://localhost:5000/api/setup/companies`)]);\n\n      if (categoriesRes.ok) {\n        const categoriesData = await categoriesRes.json(); // Check if the data is in the expected format\n\n        if (Array.isArray(categoriesData)) {\n          setCategories(categoriesData);\n        } else if (categoriesData.data && Array.isArray(categoriesData.data)) {\n          setCategories(categoriesData.data);\n        } else {\n          toast.error(\"Invalid categories data format\");\n        }\n      } else {\n        toast.error(\"Failed to load categories\");\n      }\n\n      if (companiesRes.ok) {\n        const companiesData = await companiesRes.json(); // Check if the data is in the expected format\n\n        if (Array.isArray(companiesData)) {\n          setCompanies(companiesData);\n        } else if (companiesData.data && Array.isArray(companiesData.data)) {\n          setCompanies(companiesData.data);\n        } else {\n          toast.error(\"Invalid companies data format\");\n        }\n      } else {\n        toast.error(\"Failed to load companies\");\n      }\n    } catch (error) {\n      toast.error('Failed to load form data');\n    }\n  }; // Fetch paginated products\n\n\n  const fetchProducts = async function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : productsPerPage;\n\n    try {\n      const response = await fetch(`${API_BASE_URL}?page=${page}&limit=${limit}`);\n      const data = await response.json();\n\n      if (response.ok) {\n        setNonPharmacyProducts(data.data);\n        setTotalProducts(data.totalItems);\n        setTotalPages(data.totalPages);\n      } else {\n        console.error('Error fetching products:', data);\n        toast.error('Failed to fetch products');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Network error occurred');\n    }\n  }; // Fetch products when the page changes\n\n\n  useEffect(() => {\n    fetchProducts(currentPage, productsPerPage);\n  }, [currentPage, productsPerPage]); // Fetch dropdown data when component mounts\n\n  useEffect(() => {\n    fetchDropdownData();\n  }, []);\n\n  const addNonPharmacyProduct = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const productDetails = Object.fromEntries(formData.entries()); // Check for required fields\n\n    const requiredFields = ['Product_name', 'Category', 'Company', 'Stock', 'Code'];\n    const missingFields = requiredFields.filter(field => !productDetails[field]);\n\n    if (missingFields.length > 0) {\n      toast.error(`Missing required fields: ${missingFields.join(', ')}`);\n      return;\n    } // Add metadata\n\n\n    productDetails.addedBy = 'admin';\n    productDetails.addedToDbAt = new Date().toISOString();\n    productDetails.Created_At = new Date().toISOString().split('T')[0];\n    productDetails.Creator = 'Admin';\n\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productDetails)\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Close the modal\n        document.getElementById('create-new-product').checked = false; // Show success message\n\n        toast.success( /*#__PURE__*/_jsxDEV(AddModal, {\n          name: productDetails.Product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 31\n        }, this)); // Refresh the product list\n\n        fetchProducts(currentPage, productsPerPage);\n      } else {\n        console.error('Error adding product:', data);\n        toast.error(`Failed to add product: ${data.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Network error occurred');\n    } // Reset the form\n\n\n    event.target.reset();\n  };\n\n  const updateNonPharmacyProduct = async event => {\n    event.preventDefault();\n\n    if (!currentProduct) {\n      toast.error('No product selected for update');\n      return;\n    }\n\n    const formData = new FormData(event.target);\n    const productDetails = Object.fromEntries(formData.entries());\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/${currentProduct._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productDetails)\n      });\n\n      if (response.ok) {\n        toast.success('Product updated successfully');\n        document.getElementById('edit-product').checked = false;\n        handleRefresh();\n        setCurrentProduct(null);\n      } else {\n        toast.error('Failed to update product');\n      }\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Error updating product');\n    }\n  }; // Function to render category options\n\n\n  const renderCategoryOptions = () => {\n    return categories.map(category => category.Name);\n  }; // Function to render company options\n\n\n  const renderCompanyOptions = () => {\n    return companies.map(company => company.Name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"p-4 mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardPageHeading, {\n      name: \"Non-Pharmacy Products\",\n      value: totalProducts,\n      buttons: [/*#__PURE__*/_jsxDEV(NewButton, {\n        modalId: \"create-new-product\",\n        onClick: handleOpenModal\n      }, \"new-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: handleRefresh\n      }, \"refresh-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PrintButton, {}, \"print-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"create-new-product\",\n      className: \"modal-toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"create-new-product\",\n      className: \"modal cursor-pointer\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\",\n        htmlFor: \"\",\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          modalId: 'create-new-product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeading, {\n          modalHeading: 'Create a Non-Pharmacy Product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addNonPharmacyProduct,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              title: 'Code',\n              type: \"text\",\n              name: \"Code\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Product Name',\n              type: \"text\",\n              name: \"Product_name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Category',\n              name: \"Category\",\n              isRequired: \"required\",\n              options: renderCategoryOptions()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Company',\n              name: \"Company\",\n              isRequired: \"required\",\n              options: renderCompanyOptions()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Stock',\n              type: \"text\",\n              name: \"Stock\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack Type',\n              type: \"text\",\n              name: \"Pack_Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack Size',\n              type: \"text\",\n              name: \"Pack_Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Strength',\n              type: \"text\",\n              name: \"Strength\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Pack TP',\n              type1: \"number\",\n              name1: \"Pack_TP\",\n              title2: 'Pack MRP',\n              type2: \"number\",\n              name2: \"Pack_MRP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Unit TP',\n              type1: \"number\",\n              name1: \"Unit_TP\",\n              title2: 'Unit MRP',\n              type2: \"number\",\n              name2: \"Unit_MRP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Purchase Discount %',\n              type1: \"number\",\n              name1: \"purchaseDiscountPercent\",\n              title2: 'Purchase Discount Taka',\n              type2: \"number\",\n              name2: \"purchaseDiscountTaka\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Purchase VAT %',\n              type1: \"number\",\n              name1: \"purchaseVatPercent\",\n              title2: 'Purchase VAT Taka',\n              type2: \"number\",\n              name2: \"purchaseVatTaka\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Sales Discount %',\n              type1: \"number\",\n              name1: \"salesDiscountPercent\",\n              title2: 'Sales Discount Taka',\n              type2: \"number\",\n              name2: \"salesDiscountTaka\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Sales VAT %',\n              type1: \"number\",\n              name1: \"salesVatPercent\",\n              title2: 'Sales VAT Taka',\n              type2: \"number\",\n              name2: \"salesVatTaka\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(SaveButton, {\n              extraClass: ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n              modalId: 'create-new-product'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"edit-product\",\n      className: \"modal-toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"edit-product\",\n      className: \"modal cursor-pointer\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\",\n        htmlFor: \"\",\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          modalId: 'edit-product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeading, {\n          modalHeading: 'Edit Non-Pharmacy Product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), currentProduct && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateNonPharmacyProduct,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              title: 'Code',\n              type: \"text\",\n              name: \"Code\",\n              defaultValue: currentProduct.Code,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Product Name',\n              type: \"text\",\n              name: \"Product_name\",\n              defaultValue: currentProduct.Product_name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Category',\n              name: \"Category\",\n              isRequired: \"required\",\n              options: renderCategoryOptions(),\n              defaultValue: currentProduct.Category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Company',\n              name: \"Company\",\n              isRequired: \"required\",\n              options: renderCompanyOptions(),\n              defaultValue: currentProduct.Company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Stock',\n              type: \"text\",\n              name: \"Stock\",\n              defaultValue: currentProduct.Stock,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack Type',\n              type: \"text\",\n              name: \"Pack_Type\",\n              defaultValue: currentProduct.Pack_Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack Size',\n              type: \"text\",\n              name: \"Pack_Size\",\n              defaultValue: currentProduct.Pack_Size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Strength',\n              type: \"text\",\n              name: \"Strength\",\n              defaultValue: currentProduct.Strength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Pack TP',\n              type1: \"number\",\n              name1: \"Pack_TP\",\n              defaultValue1: currentProduct.Pack_TP,\n              title2: 'Pack MRP',\n              type2: \"number\",\n              name2: \"Pack_MRP\",\n              defaultValue2: currentProduct.Pack_MRP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Unit TP',\n              type1: \"number\",\n              name1: \"Unit_TP\",\n              defaultValue1: currentProduct.Unit_TP,\n              title2: 'Unit MRP',\n              type2: \"number\",\n              name2: \"Unit_MRP\",\n              defaultValue2: currentProduct.Unit_MRP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Purchase Discount %',\n              type1: \"number\",\n              name1: \"purchaseDiscountPercent\",\n              defaultValue1: currentProduct.purchaseDiscountPercent,\n              title2: 'Purchase Discount Taka',\n              type2: \"number\",\n              name2: \"purchaseDiscountTaka\",\n              defaultValue2: currentProduct.purchaseDiscountTaka\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Purchase VAT %',\n              type1: \"number\",\n              name1: \"purchaseVatPercent\",\n              defaultValue1: currentProduct.purchaseVatPercent,\n              title2: 'Purchase VAT Taka',\n              type2: \"number\",\n              name2: \"purchaseVatTaka\",\n              defaultValue2: currentProduct.purchaseVatTaka\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Sales Discount %',\n              type1: \"number\",\n              name1: \"salesDiscountPercent\",\n              defaultValue1: currentProduct.salesDiscountPercent,\n              title2: 'Sales Discount Taka',\n              type2: \"number\",\n              name2: \"salesDiscountTaka\",\n              defaultValue2: currentProduct.salesDiscountTaka\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              title1: 'Sales VAT %',\n              type1: \"number\",\n              name1: \"salesVatPercent\",\n              defaultValue1: currentProduct.salesVatPercent,\n              title2: 'Sales VAT Taka',\n              type2: \"number\",\n              name2: \"salesVatTaka\",\n              defaultValue2: currentProduct.salesVatTaka\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(SaveButton, {\n              extraClass: ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n              modalId: 'edit-product'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-zebra table-compact\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['SN', 'Code', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-xs md:text-2xs lg:text-md\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: nonPharmacyProducts.length > 0 ? nonPharmacyProducts.map((product, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          tableRowsData: [(currentPage - 1) * productsPerPage + index + 1, product.Code || 'N/A', product.Product_name || 'N/A', product.Category || 'N/A', product.Company || 'N/A', product.Stock || 'N/A', product.Pack_Type || 'N/A', product.Pack_TP || 'N/A', product.Pack_MRP || 'N/A', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center gap-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(EditButton, {\n              id: product._id,\n              onClick: () => handleOpenEditModal(product._id),\n              apiEndpoint: API_BASE_URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n              deleteApiLink: `${API_BASE_URL}/${product._id}`,\n              itemId: product._id,\n              name: product.Product_name,\n              onDelete: () => fetchProducts(currentPage, productsPerPage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 37\n          }, this)]\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"10\",\n            className: \"text-center py-4\",\n            children: \"No products found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }, this), totalPages > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination mt-4 flex justify-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        disabled: currentPage === 1,\n        className: \"btn btn-sm\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }, this), currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        className: `btn btn-sm ${currentPage === 1 ? 'btn-active' : ''}`,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 25\n      }, this), currentPage > 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn btn-sm btn-disabled\",\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 41\n      }, this), Array.from({\n        length: totalPages\n      }, (_, i) => {\n        const pageNumber = i + 1; // Show only a subset of pages around the current page\n\n        if (pageNumber >= currentPage - 2 && pageNumber <= currentPage + 2) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage(pageNumber),\n            className: `btn btn-sm ${currentPage === pageNumber ? 'btn-active' : ''}`,\n            children: pageNumber\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 33\n          }, this);\n        }\n\n        return null;\n      }), currentPage < totalPages - 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn btn-sm btn-disabled\",\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 54\n      }, this), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        className: `btn btn-sm ${currentPage === totalPages ? 'btn-active' : ''}`,\n        children: totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        className: \"btn btn-sm\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NonPharmacyProducts, \"wYApMQIHGQ62l33RPzJP70/gCvE=\");\n\n_c = NonPharmacyProducts;\nexport default NonPharmacyProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"NonPharmacyProducts\");","map":{"version":3,"names":["React","useState","useEffect","SaveButton","CancelButton","PrintButton","NewButton","Input","Select","DoubleInput","ModalCloseButton","ModalHeading","RefreshButton","TableRow","EditButton","DeleteButton","toast","DashboardPageHeading","AddModal","API_BASE_URL","NonPharmacyProducts","nonPharmacyProducts","setNonPharmacyProducts","categories","setCategories","companies","setCompanies","currentPage","setCurrentPage","productsPerPage","totalProducts","setTotalProducts","totalPages","setTotalPages","isModalOpen","setIsModalOpen","currentProduct","setCurrentProduct","handleOpenModal","length","fetchDropdownData","info","document","getElementById","checked","handleOpenEditModal","productId","productToEdit","find","product","_id","error","handleRefresh","fetchProducts","categoriesRes","companiesRes","Promise","all","fetch","ok","categoriesData","json","Array","isArray","data","companiesData","page","limit","response","totalItems","console","addNonPharmacyProduct","event","preventDefault","formData","FormData","target","productDetails","Object","fromEntries","entries","requiredFields","missingFields","filter","field","join","addedBy","addedToDbAt","Date","toISOString","Created_At","split","Creator","method","headers","body","JSON","stringify","success","Product_name","reset","updateNonPharmacyProduct","renderCategoryOptions","map","category","Name","renderCompanyOptions","company","Code","Category","Company","Stock","Pack_Type","Pack_Size","Strength","Pack_TP","Pack_MRP","Unit_TP","Unit_MRP","purchaseDiscountPercent","purchaseDiscountTaka","purchaseVatPercent","purchaseVatTaka","salesDiscountPercent","salesDiscountTaka","salesVatPercent","salesVatTaka","item","index","prev","Math","max","from","_","i","pageNumber","min"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/src/pages/Dashboard/Products/NonPharmacyProducts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SaveButton from '../../../components/buttons/SaveButton';\r\nimport CancelButton from '../../../components/buttons/CancelButton';\r\nimport PrintButton from '../../../components/buttons/PrintButton';\r\nimport NewButton from '../../../components/buttons/NewButton';\r\nimport Input from '../../../components/form/Input';\r\nimport Select from '../../../components/form/Select';\r\nimport DoubleInput from '../../../components/form/DoubleInput';\r\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\r\nimport ModalHeading from '../../../components/headings/ModalHeading';\r\nimport RefreshButton from '../../../components/buttons/RefreshButton';\r\nimport TableRow from '../../../components/TableRow';\r\nimport EditButton from '../../../components/buttons/EditButton';\r\nimport DeleteButton from '../../../components/buttons/DeleteButton';\r\nimport { toast } from 'react-toastify';\r\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\r\nimport AddModal from '../../../components/modals/AddModal';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy';\r\n\r\nconst NonPharmacyProducts = () => {\r\n    const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [productsPerPage] = useState(10);\r\n    const [totalProducts, setTotalProducts] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [currentProduct, setCurrentProduct] = useState(null);\r\n\r\n    // Function to handle opening the modal\r\n    const handleOpenModal = () => {\r\n        // Check if dropdown data is loaded\r\n        if (categories.length === 0 || companies.length === 0) {\r\n            // If data isn't loaded yet, fetch it first\r\n            fetchDropdownData();\r\n            toast.info(\"Loading form data...\");\r\n        }\r\n        document.getElementById('create-new-product').checked = true;\r\n    };\r\n\r\n    // Function to handle opening the edit modal\r\n    const handleOpenEditModal = (productId) => {\r\n        // Find the product to edit\r\n        const productToEdit = nonPharmacyProducts.find(product => product._id === productId);\r\n        if (productToEdit) {\r\n            setCurrentProduct(productToEdit);\r\n            \r\n            // Check if dropdown data is loaded\r\n            if (categories.length === 0 || companies.length === 0) {\r\n                fetchDropdownData();\r\n            }\r\n            \r\n            document.getElementById('edit-product').checked = true;\r\n        } else {\r\n            toast.error(\"Product not found\");\r\n        }\r\n    };\r\n\r\n    // Function to handle refresh\r\n    const handleRefresh = () => {\r\n        fetchProducts(currentPage, productsPerPage);\r\n    };\r\n\r\n    // Separate function to fetch dropdown data\r\n    const fetchDropdownData = async () => {\r\n        try {\r\n            const [categoriesRes, companiesRes] = await Promise.all([\r\n                fetch(`http://localhost:5000/api/setup/categories`),\r\n                fetch(`http://localhost:5000/api/setup/companies`)\r\n            ]);\r\n            \r\n            if (categoriesRes.ok) {\r\n                const categoriesData = await categoriesRes.json();\r\n                // Check if the data is in the expected format\r\n                if (Array.isArray(categoriesData)) {\r\n                    setCategories(categoriesData);\r\n                } else if (categoriesData.data && Array.isArray(categoriesData.data)) {\r\n                    setCategories(categoriesData.data);\r\n                } else {\r\n                    toast.error(\"Invalid categories data format\");\r\n                }\r\n            } else {\r\n                toast.error(\"Failed to load categories\");\r\n            }\r\n            \r\n            if (companiesRes.ok) {\r\n                const companiesData = await companiesRes.json();\r\n                // Check if the data is in the expected format\r\n                if (Array.isArray(companiesData)) {\r\n                    setCompanies(companiesData);\r\n                } else if (companiesData.data && Array.isArray(companiesData.data)) {\r\n                    setCompanies(companiesData.data);\r\n                } else {\r\n                    toast.error(\"Invalid companies data format\");\r\n                }\r\n            } else {\r\n                toast.error(\"Failed to load companies\");\r\n            }\r\n        } catch (error) {\r\n            toast.error('Failed to load form data');\r\n        }\r\n    };\r\n\r\n    // Fetch paginated products\r\n    const fetchProducts = async (page = 1, limit = productsPerPage) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}?page=${page}&limit=${limit}`);\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setNonPharmacyProducts(data.data);\r\n                setTotalProducts(data.totalItems);\r\n                setTotalPages(data.totalPages);\r\n            } else {\r\n                console.error('Error fetching products:', data);\r\n                toast.error('Failed to fetch products');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            toast.error('Network error occurred');\r\n        }\r\n    };\r\n\r\n    // Fetch products when the page changes\r\n    useEffect(() => {\r\n        fetchProducts(currentPage, productsPerPage);\r\n    }, [currentPage, productsPerPage]);\r\n\r\n    // Fetch dropdown data when component mounts\r\n    useEffect(() => {\r\n        fetchDropdownData();\r\n    }, []);\r\n\r\n    const addNonPharmacyProduct = async (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const productDetails = Object.fromEntries(formData.entries());\r\n        \r\n        // Check for required fields\r\n        const requiredFields = ['Product_name', 'Category', 'Company', 'Stock', 'Code'];\r\n        const missingFields = requiredFields.filter(field => !productDetails[field]);\r\n        \r\n        if (missingFields.length > 0) {\r\n            toast.error(`Missing required fields: ${missingFields.join(', ')}`);\r\n            return;\r\n        }\r\n        \r\n        // Add metadata\r\n        productDetails.addedBy = 'admin';\r\n        productDetails.addedToDbAt = new Date().toISOString();\r\n        productDetails.Created_At = new Date().toISOString().split('T')[0];\r\n        productDetails.Creator = 'Admin';\r\n\r\n        try {\r\n            const response = await fetch(API_BASE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(productDetails)\r\n            });\r\n            \r\n            const data = await response.json();\r\n            \r\n            if (response.ok) {\r\n                // Close the modal\r\n                document.getElementById('create-new-product').checked = false;\r\n                \r\n                // Show success message\r\n                toast.success(<AddModal name={productDetails.Product_name} />);\r\n                \r\n                // Refresh the product list\r\n                fetchProducts(currentPage, productsPerPage);\r\n            } else {\r\n                console.error('Error adding product:', data);\r\n                toast.error(`Failed to add product: ${data.error || 'Unknown error'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            toast.error('Network error occurred');\r\n        }\r\n        \r\n        // Reset the form\r\n        event.target.reset();\r\n    };\r\n\r\n    const updateNonPharmacyProduct = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (!currentProduct) {\r\n            toast.error('No product selected for update');\r\n            return;\r\n        }\r\n        \r\n        const formData = new FormData(event.target);\r\n        const productDetails = Object.fromEntries(formData.entries());\r\n        \r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/${currentProduct._id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(productDetails),\r\n            });\r\n\r\n            if (response.ok) {\r\n                toast.success('Product updated successfully');\r\n                document.getElementById('edit-product').checked = false;\r\n                handleRefresh();\r\n                setCurrentProduct(null);\r\n            } else {\r\n                toast.error('Failed to update product');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            toast.error('Error updating product');\r\n        }\r\n    };\r\n\r\n    // Function to render category options\r\n    const renderCategoryOptions = () => {\r\n        return categories.map(category => category.Name);\r\n    };\r\n\r\n    // Function to render company options\r\n    const renderCompanyOptions = () => {\r\n        return companies.map(company => company.Name);\r\n    };\r\n\r\n    return (\r\n        <section className='p-4 mt-16'>\r\n            <DashboardPageHeading\r\n                name='Non-Pharmacy Products'\r\n                value={totalProducts}\r\n                buttons={[\r\n                    <NewButton key=\"new-button\" modalId='create-new-product' onClick={handleOpenModal} />,\r\n                    <RefreshButton key=\"refresh-button\" onClick={handleRefresh} />,\r\n                    <PrintButton key=\"print-button\" />\r\n                ]}\r\n            />\r\n\r\n            {/* Add New Product Modal */}\r\n            <input type=\"checkbox\" id=\"create-new-product\" className=\"modal-toggle\" />\r\n            <label htmlFor=\"create-new-product\" className=\"modal cursor-pointer\">\r\n                <label className=\"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\" htmlFor=\"\">\r\n                    <ModalCloseButton modalId={'create-new-product'} />\r\n                    <ModalHeading modalHeading={'Create a Non-Pharmacy Product'} />\r\n                    <form onSubmit={addNonPharmacyProduct}>\r\n                        <div className='grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 mb-2'>\r\n                            <Input title={'Code'} type='text' name='Code' required />\r\n                            <Input title={'Product Name'} type='text' name='Product_name' required />\r\n                            <Select title={'Category'} name='Category' isRequired='required' options={renderCategoryOptions()} />\r\n                            <Select title={'Company'} name='Company' isRequired='required' options={renderCompanyOptions()} />\r\n                            <Input title={'Stock'} type='text' name='Stock' required />\r\n                            <Input title={'Pack Type'} type='text' name='Pack_Type' />\r\n                            <Input title={'Pack Size'} type='text' name='Pack_Size' />\r\n                            <Input title={'Strength'} type='text' name='Strength' />\r\n                            <DoubleInput \r\n                                title1={'Pack TP'} \r\n                                type1='number' \r\n                                name1='Pack_TP' \r\n                                title2={'Pack MRP'} \r\n                                type2='number' \r\n                                name2='Pack_MRP' \r\n                            />\r\n                            <DoubleInput \r\n                                title1={'Unit TP'} \r\n                                type1='number' \r\n                                name1='Unit_TP' \r\n                                title2={'Unit MRP'} \r\n                                type2='number' \r\n                                name2='Unit_MRP' \r\n                            />\r\n                            <DoubleInput \r\n                                title1={'Purchase Discount %'} \r\n                                type1='number' \r\n                                name1='purchaseDiscountPercent' \r\n                                title2={'Purchase Discount Taka'} \r\n                                type2='number' \r\n                                name2='purchaseDiscountTaka' \r\n                            />\r\n                            <DoubleInput \r\n                                title1={'Purchase VAT %'} \r\n                                type1='number' \r\n                                name1='purchaseVatPercent' \r\n                                title2={'Purchase VAT Taka'} \r\n                                type2='number' \r\n                                name2='purchaseVatTaka' \r\n                            />\r\n                            <DoubleInput \r\n                                title1={'Sales Discount %'} \r\n                                type1='number' \r\n                                name1='salesDiscountPercent' \r\n                                title2={'Sales Discount Taka'} \r\n                                type2='number' \r\n                                name2='salesDiscountTaka' \r\n                            />\r\n                            <DoubleInput \r\n                                title1={'Sales VAT %'} \r\n                                type1='number' \r\n                                name1='salesVatPercent' \r\n                                title2={'Sales VAT Taka'} \r\n                                type2='number' \r\n                                name2='salesVatTaka' \r\n                            />\r\n                        </div>\r\n                        <div className=\"flex gap-2 mt-4\">\r\n                            <SaveButton extraClass={''} />\r\n                            <CancelButton modalId={'create-new-product'} />\r\n                        </div>\r\n                    </form>\r\n                </label>\r\n            </label>\r\n\r\n            {/* Edit Product Modal */}\r\n            <input type=\"checkbox\" id=\"edit-product\" className=\"modal-toggle\" />\r\n            <label htmlFor=\"edit-product\" className=\"modal cursor-pointer\">\r\n                <label className=\"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\" htmlFor=\"\">\r\n                    <ModalCloseButton modalId={'edit-product'} />\r\n                    <ModalHeading modalHeading={'Edit Non-Pharmacy Product'} />\r\n                    {currentProduct && (\r\n                        <form onSubmit={updateNonPharmacyProduct}>\r\n                            <div className='grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-x-4 gap-y-2 mb-2'>\r\n                                <Input title={'Code'} type='text' name='Code' defaultValue={currentProduct.Code} required />\r\n                                <Input title={'Product Name'} type='text' name='Product_name' defaultValue={currentProduct.Product_name} required />\r\n                                <Select \r\n                                    title={'Category'} \r\n                                    name='Category' \r\n                                    isRequired='required' \r\n                                    options={renderCategoryOptions()} \r\n                                    defaultValue={currentProduct.Category}\r\n                                />\r\n                                <Select \r\n                                    title={'Company'} \r\n                                    name='Company' \r\n                                    isRequired='required' \r\n                                    options={renderCompanyOptions()} \r\n                                    defaultValue={currentProduct.Company}\r\n                                />\r\n                                <Input title={'Stock'} type='text' name='Stock' defaultValue={currentProduct.Stock} required />\r\n                                <Input title={'Pack Type'} type='text' name='Pack_Type' defaultValue={currentProduct.Pack_Type} />\r\n                                <Input title={'Pack Size'} type='text' name='Pack_Size' defaultValue={currentProduct.Pack_Size} />\r\n                                <Input title={'Strength'} type='text' name='Strength' defaultValue={currentProduct.Strength} />\r\n                                <DoubleInput \r\n                                    title1={'Pack TP'} \r\n                                    type1='number' \r\n                                    name1='Pack_TP' \r\n                                    defaultValue1={currentProduct.Pack_TP}\r\n                                    title2={'Pack MRP'} \r\n                                    type2='number' \r\n                                    name2='Pack_MRP' \r\n                                    defaultValue2={currentProduct.Pack_MRP}\r\n                                />\r\n                                <DoubleInput \r\n                                    title1={'Unit TP'} \r\n                                    type1='number' \r\n                                    name1='Unit_TP' \r\n                                    defaultValue1={currentProduct.Unit_TP}\r\n                                    title2={'Unit MRP'} \r\n                                    type2='number' \r\n                                    name2='Unit_MRP' \r\n                                    defaultValue2={currentProduct.Unit_MRP}\r\n                                />\r\n                                <DoubleInput \r\n                                    title1={'Purchase Discount %'} \r\n                                    type1='number' \r\n                                    name1='purchaseDiscountPercent' \r\n                                    defaultValue1={currentProduct.purchaseDiscountPercent}\r\n                                    title2={'Purchase Discount Taka'} \r\n                                    type2='number' \r\n                                    name2='purchaseDiscountTaka' \r\n                                    defaultValue2={currentProduct.purchaseDiscountTaka}\r\n                                />\r\n                                <DoubleInput \r\n                                    title1={'Purchase VAT %'} \r\n                                    type1='number' \r\n                                    name1='purchaseVatPercent' \r\n                                    defaultValue1={currentProduct.purchaseVatPercent}\r\n                                    title2={'Purchase VAT Taka'} \r\n                                    type2='number' \r\n                                    name2='purchaseVatTaka' \r\n                                    defaultValue2={currentProduct.purchaseVatTaka}\r\n                                />\r\n                                <DoubleInput \r\n                                    title1={'Sales Discount %'} \r\n                                    type1='number' \r\n                                    name1='salesDiscountPercent' \r\n                                    defaultValue1={currentProduct.salesDiscountPercent}\r\n                                    title2={'Sales Discount Taka'} \r\n                                    type2='number' \r\n                                    name2='salesDiscountTaka' \r\n                                    defaultValue2={currentProduct.salesDiscountTaka}\r\n                                />\r\n                                <DoubleInput \r\n                                    title1={'Sales VAT %'} \r\n                                    type1='number' \r\n                                    name1='salesVatPercent' \r\n                                    defaultValue1={currentProduct.salesVatPercent}\r\n                                    title2={'Sales VAT Taka'} \r\n                                    type2='number' \r\n                                    name2='salesVatTaka' \r\n                                    defaultValue2={currentProduct.salesVatTaka}\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex gap-2 mt-4\">\r\n                                <SaveButton extraClass={''} />\r\n                                <CancelButton modalId={'edit-product'} />\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </label>\r\n            </label>\r\n\r\n            <table className=\"table table-zebra table-compact\">\r\n                <thead>\r\n                    <tr>\r\n                        {['SN', 'Code', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => (\r\n                            <th key={index} className='text-xs md:text-2xs lg:text-md'>{item}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {nonPharmacyProducts.length > 0 ? (\r\n                        nonPharmacyProducts.map((product, index) => (\r\n                            <TableRow\r\n                                key={product._id}\r\n                                tableRowsData={[\r\n                                    (currentPage - 1) * productsPerPage + index + 1,\r\n                                    product.Code || 'N/A',\r\n                                    product.Product_name || 'N/A',\r\n                                    product.Category || 'N/A',\r\n                                    product.Company || 'N/A',\r\n                                    product.Stock || 'N/A',\r\n                                    product.Pack_Type || 'N/A',\r\n                                    product.Pack_TP || 'N/A',\r\n                                    product.Pack_MRP || 'N/A',\r\n                                    <span className='flex items-center gap-x-1'>\r\n                                        <EditButton \r\n                                            id={product._id} \r\n                                            onClick={() => handleOpenEditModal(product._id)} \r\n                                            apiEndpoint={API_BASE_URL}\r\n                                        />\r\n                                        <DeleteButton\r\n                                            deleteApiLink={`${API_BASE_URL}/${product._id}`}\r\n                                            itemId={product._id}\r\n                                            name={product.Product_name}\r\n                                            onDelete={() => fetchProducts(currentPage, productsPerPage)}\r\n                                        />\r\n                                    </span>\r\n                                ]}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"10\" className=\"text-center py-4\">No products found</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination */}\r\n            {totalPages > 0 && (\r\n                <div className='pagination mt-4 flex justify-center gap-2'>\r\n                    {/* Previous Button */}\r\n                    <button\r\n                        onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                        disabled={currentPage === 1}\r\n                        className='btn btn-sm'\r\n                    >\r\n                        Previous\r\n                    </button>\r\n\r\n                    {/* First Page Button */}\r\n                    {currentPage > 1 && (\r\n                        <button\r\n                            onClick={() => setCurrentPage(1)}\r\n                            className={`btn btn-sm ${currentPage === 1 ? 'btn-active' : ''}`}\r\n                        >\r\n                            1\r\n                        </button>\r\n                    )}\r\n\r\n                    {/* Ellipsis for Skipped Pages */}\r\n                    {currentPage > 2 && <span className='btn btn-sm btn-disabled'>...</span>}\r\n\r\n                    {/* Middle Pages */}\r\n                    {Array.from({ length: totalPages }, (_, i) => {\r\n                        const pageNumber = i + 1;\r\n                        // Show only a subset of pages around the current page\r\n                        if (pageNumber >= currentPage - 2 && pageNumber <= currentPage + 2) {\r\n                            return (\r\n                                <button\r\n                                    key={i}\r\n                                    onClick={() => setCurrentPage(pageNumber)}\r\n                                    className={`btn btn-sm ${currentPage === pageNumber ? 'btn-active' : ''}`}\r\n                                >\r\n                                    {pageNumber}\r\n                                </button>\r\n                            );\r\n                        }\r\n                        return null;\r\n                    })}\r\n\r\n                    {/* Ellipsis for Skipped Pages */}\r\n                    {currentPage < totalPages - 2 && <span className='btn btn-sm btn-disabled'>...</span>}\r\n\r\n                    {/* Last Page Button */}\r\n                    {currentPage < totalPages && (\r\n                        <button\r\n                            onClick={() => setCurrentPage(totalPages)}\r\n                            className={`btn btn-sm ${currentPage === totalPages ? 'btn-active' : ''}`}\r\n                        >\r\n                            {totalPages}\r\n                        </button>\r\n                    )}\r\n\r\n                    {/* Next Button */}\r\n                    <button\r\n                        onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                        disabled={currentPage === totalPages}\r\n                        className='btn btn-sm'\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default NonPharmacyProducts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}