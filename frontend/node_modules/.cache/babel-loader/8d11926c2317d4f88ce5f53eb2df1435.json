{"ast":null,"code":"import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n/**\n * @internal\n */\n\nclass PanSession {\n  constructor(event, handlers) {\n    let {\n      transformPagePoint,\n      dragSnapToOrigin = false\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    /**\n     * @internal\n     */\n    this.startEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEvent = null;\n    /**\n     * @internal\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\n     * @internal\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const info = getPanInfo(this.lastMoveEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      const isDistancePastThreshold = distance2D(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      const {\n        point\n      } = info;\n      const {\n        timestamp\n      } = frameData;\n      this.history.push({ ...point,\n        timestamp\n      });\n      const {\n        onStart,\n        onMove\n      } = this.handlers;\n\n      if (!isPanStarted) {\n        onStart && onStart(this.lastMoveEvent, info);\n        this.startEvent = this.lastMoveEvent;\n      }\n\n      onMove && onMove(this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = (event, info) => {\n      if (event.target instanceof Element && event.target.hasPointerCapture && event.pointerId !== undefined) {\n        try {\n          if (!event.target.hasPointerCapture(event.pointerId)) {\n            return;\n          }\n        } catch (e) {}\n      }\n\n      this.lastMoveEvent = event;\n      this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint); // Throttle mouse move event to once per frame\n\n      frame.update(this.updatePoint, true);\n    };\n\n    this.handlePointerUp = (event, info) => {\n      capturePointer(event, \"release\");\n      this.end();\n      const {\n        onEnd,\n        onSessionEnd,\n        resumeAnimation\n      } = this.handlers;\n      if (this.dragSnapToOrigin) resumeAnimation && resumeAnimation();\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;\n      const panInfo = getPanInfo(event.type === \"pointercancel\" || event.type === \"lostpointercapture\" ? this.lastMoveEventInfo : transformPoint(info, this.transformPagePoint), this.history);\n\n      if (this.startEvent && onEnd) {\n        onEnd(event, panInfo);\n      }\n\n      onSessionEnd && onSessionEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (!isPrimaryPointer(event)) return;\n    this.dragSnapToOrigin = dragSnapToOrigin;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    const info = extractEventInfo(event);\n    const initialInfo = transformPoint(info, this.transformPagePoint);\n    const {\n      point\n    } = initialInfo;\n    const {\n      timestamp\n    } = frameData;\n    this.history = [{ ...point,\n      timestamp\n    }];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    capturePointer(event, \"set\");\n    this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n  }\n\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n\n  end() {\n    this.removeListeners && this.removeListeners();\n    cancelFrame(this.updatePoint);\n  }\n\n}\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_ref, history) {\n  let {\n    point\n  } = _ref;\n  return {\n    point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nexport { PanSession };","map":{"version":3,"names":["capturePointer","isPrimaryPointer","secondsToMilliseconds","millisecondsToSeconds","addPointerEvent","extractEventInfo","distance2D","pipe","frame","cancelFrame","frameData","PanSession","constructor","event","handlers","transformPagePoint","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","onStart","onMove","handlePointerMove","target","Element","hasPointerCapture","pointerId","undefined","e","transformPoint","update","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","type","initialInfo","onSessionStart","removeListeners","currentTarget","updateHandlers","subtractPoint","a","b","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","length","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"],"sourcesContent":["import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}