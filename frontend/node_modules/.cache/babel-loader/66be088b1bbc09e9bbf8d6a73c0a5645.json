{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aweso\\\\OneDrive\\\\Desktop\\\\QuickMeds\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Products\\\\NonPharmacyProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SaveButton from '../../../components/buttons/SaveButton';\nimport CancelButton from '../../../components/buttons/CancelButton';\nimport PrintButton from '../../../components/buttons/PrintButton';\nimport NewButton from '../../../components/buttons/NewButton';\nimport Input from '../../../components/form/Input';\nimport Select from '../../../components/form/Select';\nimport DoubleInput from '../../../components/form/DoubleInput';\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\nimport ModalHeading from '../../../components/headings/ModalHeading';\nimport RefreshButton from '../../../components/buttons/RefreshButton';\nimport TableRow from '../../../components/TableRow';\nimport EditButton from '../../../components/buttons/EditButton';\nimport DeleteButton from '../../../components/buttons/DeleteButton';\nimport { toast } from 'react-toastify';\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\nimport AddModal from '../../../components/modals/AddModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy';\n\nconst NonPharmacyProducts = () => {\n  _s();\n\n  const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage, setProductsPerPage] = useState(10);\n  const [categories, setCategories] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [formData, setFormData] = useState({\n    Product_name: '',\n    Category: '',\n    Company: '',\n    Description: '',\n    Price: '',\n    Discount: '',\n    Stock: '',\n    Status: 'Active',\n    Pack_Type: '',\n    Pack_TP: '',\n    Pack_MRP: ''\n  }); // Function to render category options\n\n  const renderCategoryOptions = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.Name,\n        children: category.Name\n      }, category._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true);\n  }; // Function to render company options\n\n\n  const renderCompanyOptions = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.Name,\n        children: company.Name\n      }, company._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true);\n  }; // Function to handle opening the add modal\n\n\n  const handleOpenAddModal = () => {\n    // Reset form data\n    setFormData({\n      Product_name: '',\n      Category: '',\n      Company: '',\n      Description: '',\n      Price: '',\n      Discount: '',\n      Stock: '',\n      Status: 'Active',\n      Pack_Type: '',\n      Pack_TP: '',\n      Pack_MRP: ''\n    }); // Check if dropdown data is loaded\n\n    if (categories.length === 0 || companies.length === 0) {\n      // If data isn't loaded yet, fetch it first\n      fetchDropdownData();\n      toast.info(\"Loading form data...\");\n    }\n\n    setIsModalOpen(true);\n  }; // Function to handle opening the edit modal\n\n\n  const handleOpenEditModal = product => {\n    setCurrentProduct(product);\n    setFormData({\n      Product_name: product.Product_name || '',\n      Category: product.Category || '',\n      Company: product.Company || '',\n      Description: product.Description || '',\n      Price: product.Price || '',\n      Discount: product.Discount || '',\n      Stock: product.Stock || '',\n      Status: product.Status || 'Active',\n      Pack_Type: product.Pack_Type || '',\n      Pack_TP: product.Pack_TP || '',\n      Pack_MRP: product.Pack_MRP || ''\n    }); // Check if dropdown data is loaded\n\n    if (categories.length === 0 || companies.length === 0) {\n      fetchDropdownData();\n    }\n\n    setIsEditModalOpen(true);\n  }; // Function to handle refresh\n\n\n  const handleRefresh = () => {\n    fetchProducts(currentPage, productsPerPage, true);\n  }; // Fetch Non-Pharmacy Products\n\n\n  const fetchProducts = async function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : productsPerPage;\n    let forceRefresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    try {\n      // Add a cache-busting parameter if forceRefresh is true\n      const cacheBuster = forceRefresh ? `&_=${Date.now()}` : '';\n      const fetchUrl = `${API_BASE_URL}?page=${page}&limit=${limit}${cacheBuster}`;\n      const response = await fetch(fetchUrl);\n      const data = await response.json();\n\n      if (response.ok) {\n        setNonPharmacyProducts(data.data);\n        setTotalPages(data.totalPages || 1);\n      } else {\n        console.error('Error fetching products:', data);\n        toast.error('Failed to fetch products');\n        setNonPharmacyProducts([]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Network error occurred');\n      setNonPharmacyProducts([]);\n    }\n  }; // Separate function to fetch dropdown data\n\n\n  const fetchDropdownData = async () => {\n    try {\n      const [categoriesRes, companiesRes] = await Promise.all([fetch(`http://localhost:5000/api/setup/categories`), fetch(`http://localhost:5000/api/setup/companies`)]);\n\n      if (categoriesRes.ok) {\n        const categoriesData = await categoriesRes.json(); // Check if the data is in the expected format\n\n        if (Array.isArray(categoriesData)) {\n          setCategories(categoriesData);\n        } else if (categoriesData.data && Array.isArray(categoriesData.data)) {\n          setCategories(categoriesData.data);\n        } else {\n          toast.error(\"Invalid categories data format\");\n        }\n      } else {\n        toast.error(\"Failed to load categories\");\n      }\n\n      if (companiesRes.ok) {\n        const companiesData = await companiesRes.json(); // Check if the data is in the expected format\n\n        if (Array.isArray(companiesData)) {\n          setCompanies(companiesData);\n        } else if (companiesData.data && Array.isArray(companiesData.data)) {\n          setCompanies(companiesData.data);\n        } else {\n          toast.error(\"Invalid companies data format\");\n        }\n      } else {\n        toast.error(\"Failed to load companies\");\n      }\n    } catch (error) {\n      toast.error('Failed to load form data');\n    }\n  }; // Fetch products when the page changes\n\n\n  useEffect(() => {\n    fetchProducts(currentPage, productsPerPage);\n  }, [currentPage, productsPerPage]); // Fetch dropdown data when component mounts\n\n  useEffect(() => {\n    fetchDropdownData();\n  }, []); // Function to handle input changes\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({ ...prev,\n      [name]: value\n    }));\n  }; // Add New Product\n\n\n  const handleAddProduct = async e => {\n    e.preventDefault(); // Check for required fields\n\n    const requiredFields = ['Product_name', 'Category', 'Company', 'Stock'];\n    const missingFields = requiredFields.filter(field => !formData[field]);\n\n    if (missingFields.length > 0) {\n      toast.error(`Missing required fields: ${missingFields.join(', ')}`);\n      return;\n    }\n\n    const productDetails = { ...formData,\n      addedBy: 'admin',\n      addedToDbAt: new Date().toISOString()\n    };\n\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productDetails)\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Close the modal\n        setIsModalOpen(false); // Show success message\n\n        toast.success(`Product ${productDetails.Product_name} added successfully`); // Refresh the product list\n\n        handleRefresh(); // Reset form data\n\n        setFormData({\n          Product_name: '',\n          Category: '',\n          Company: '',\n          Description: '',\n          Price: '',\n          Discount: '',\n          Stock: '',\n          Status: 'Active',\n          Pack_Type: '',\n          Pack_TP: '',\n          Pack_MRP: ''\n        });\n      } else {\n        console.error('Error adding product:', data);\n        toast.error(`Failed to add product: ${data.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Network error occurred');\n    }\n  }; // Update Product\n\n\n  const handleUpdateProduct = async e => {\n    e.preventDefault();\n\n    if (!currentProduct) {\n      toast.error('No product selected for update');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/${currentProduct._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          $set: formData\n        })\n      });\n\n      if (response.ok) {\n        toast.success('Product updated successfully');\n        setIsEditModalOpen(false);\n        handleRefresh();\n      } else {\n        toast.error('Failed to update product');\n      }\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Error updating product');\n    }\n  }; // Function to handle product deletion\n\n\n  const handleDelete = productId => {\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      fetch(`${API_BASE_URL}/${productId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          toast.success('Product deleted successfully');\n          handleRefresh();\n        } else {\n          toast.error('Failed to delete product');\n        }\n      }).catch(error => {\n        console.error('Error deleting product:', error);\n        toast.error('Error deleting product');\n      });\n    }\n  }; // Render pagination\n\n\n  const renderPagination = () => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${currentPage === i ? 'btn-primary' : 'btn-ghost'}`,\n        onClick: () => setCurrentPage(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this));\n    }\n\n    return pages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"p-4 mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardPageHeading, {\n      name: `Non Pharmacy Products (${nonPharmacyProducts.length})`,\n      value: nonPharmacyProducts.length,\n      buttons: [/*#__PURE__*/_jsxDEV(NewButton, {\n        onClick: handleOpenAddModal\n      }, \"new-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: handleRefresh\n      }, \"refresh-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PrintButton, {}, \"print-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-zebra table-compact w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: ['SN', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-xs md:text-sm\",\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: nonPharmacyProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: (currentPage - 1) * productsPerPage + index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Product_name || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Category || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Company || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Stock || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Pack_Type || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Pack_TP || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Pack_MRP || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"flex space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOpenEditModal(product),\n                className: \"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product._id),\n                className: \"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 33\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-4 gap-2\",\n      children: renderPagination()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(ModalHeading, {\n            children: \"Add New Non-Pharmacy Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n            onClick: () => setIsModalOpen(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddProduct,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              label: \"Product Name\",\n              name: \"Product_name\",\n              value: formData.Product_name,\n              onChange: handleInputChange,\n              placeholder: \"Enter product name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"category\",\n                className: \"form-label\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select w-full p-2 border border-gray-300 rounded\",\n                id: \"category\",\n                name: \"Category\",\n                value: formData.Category || \"\",\n                onChange: handleInputChange,\n                required: true,\n                children: renderCategoryOptions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"company\",\n                className: \"form-label\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select w-full p-2 border border-gray-300 rounded\",\n                id: \"company\",\n                name: \"Company\",\n                value: formData.Company || \"\",\n                onChange: handleInputChange,\n                required: true,\n                children: renderCompanyOptions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Description\",\n              name: \"Description\",\n              value: formData.Description,\n              onChange: handleInputChange,\n              placeholder: \"Enter description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Stock\",\n              name: \"Stock\",\n              value: formData.Stock,\n              onChange: handleInputChange,\n              placeholder: \"Enter stock quantity\",\n              type: \"number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Pack Type\",\n              name: \"Pack_Type\",\n              value: formData.Pack_Type,\n              onChange: handleInputChange,\n              placeholder: \"Enter pack type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              label1: \"Price\",\n              name1: \"Price\",\n              value1: formData.Price,\n              onChange1: handleInputChange,\n              placeholder1: \"Enter price\",\n              label2: \"Discount\",\n              name2: \"Discount\",\n              value2: formData.Discount,\n              onChange2: handleInputChange,\n              placeholder2: \"Enter discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              label1: \"Pack TP\",\n              name1: \"Pack_TP\",\n              value1: formData.Pack_TP,\n              onChange1: handleInputChange,\n              placeholder1: \"Enter pack TP\",\n              label2: \"Pack MRP\",\n              name2: \"Pack_MRP\",\n              value2: formData.Pack_MRP,\n              onChange2: handleInputChange,\n              placeholder2: \"Enter pack MRP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Status\",\n              name: \"Status\",\n              value: formData.Status,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Inactive\",\n                children: \"Inactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n              onClick: () => setIsModalOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }, this), isEditModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg w-full max-w-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(ModalHeading, {\n            children: \"Edit Non-Pharmacy Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n            onClick: () => setIsEditModalOpen(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateProduct,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              label: \"Product Name\",\n              name: \"Product_name\",\n              value: formData.Product_name,\n              onChange: handleInputChange,\n              placeholder: \"Enter product name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"edit-category\",\n                className: \"form-label\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select w-full p-2 border border-gray-300 rounded\",\n                id: \"edit-category\",\n                name: \"Category\",\n                value: formData.Category || \"\",\n                onChange: handleInputChange,\n                required: true,\n                children: renderCategoryOptions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"edit-company\",\n                className: \"form-label\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select w-full p-2 border border-gray-300 rounded\",\n                id: \"edit-company\",\n                name: \"Company\",\n                value: formData.Company || \"\",\n                onChange: handleInputChange,\n                required: true,\n                children: renderCompanyOptions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Description\",\n              name: \"Description\",\n              value: formData.Description,\n              onChange: handleInputChange,\n              placeholder: \"Enter description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Stock\",\n              name: \"Stock\",\n              value: formData.Stock,\n              onChange: handleInputChange,\n              placeholder: \"Enter stock quantity\",\n              type: \"number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Pack Type\",\n              name: \"Pack_Type\",\n              value: formData.Pack_Type,\n              onChange: handleInputChange,\n              placeholder: \"Enter pack type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              label1: \"Price\",\n              name1: \"Price\",\n              value1: formData.Price,\n              onChange1: handleInputChange,\n              placeholder1: \"Enter price\",\n              label2: \"Discount\",\n              name2: \"Discount\",\n              value2: formData.Discount,\n              onChange2: handleInputChange,\n              placeholder2: \"Enter discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DoubleInput, {\n              label1: \"Pack TP\",\n              name1: \"Pack_TP\",\n              value1: formData.Pack_TP,\n              onChange1: handleInputChange,\n              placeholder1: \"Enter pack TP\",\n              label2: \"Pack MRP\",\n              name2: \"Pack_MRP\",\n              value2: formData.Pack_MRP,\n              onChange2: handleInputChange,\n              placeholder2: \"Enter pack MRP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Status\",\n              name: \"Status\",\n              value: formData.Status,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Inactive\",\n                children: \"Inactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n              onClick: () => setIsEditModalOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NonPharmacyProducts, \"6bJFcasmUw5JGA2G+ElNk+CqNh8=\");\n\n_c = NonPharmacyProducts;\nexport default NonPharmacyProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"NonPharmacyProducts\");","map":{"version":3,"names":["React","useState","useEffect","SaveButton","CancelButton","PrintButton","NewButton","Input","Select","DoubleInput","ModalCloseButton","ModalHeading","RefreshButton","TableRow","EditButton","DeleteButton","toast","DashboardPageHeading","AddModal","API_BASE_URL","NonPharmacyProducts","nonPharmacyProducts","setNonPharmacyProducts","totalPages","setTotalPages","currentPage","setCurrentPage","productsPerPage","setProductsPerPage","categories","setCategories","companies","setCompanies","isModalOpen","setIsModalOpen","isEditModalOpen","setIsEditModalOpen","currentProduct","setCurrentProduct","formData","setFormData","Product_name","Category","Company","Description","Price","Discount","Stock","Status","Pack_Type","Pack_TP","Pack_MRP","renderCategoryOptions","map","category","Name","_id","renderCompanyOptions","company","handleOpenAddModal","length","fetchDropdownData","info","handleOpenEditModal","product","handleRefresh","fetchProducts","page","limit","forceRefresh","cacheBuster","Date","now","fetchUrl","response","fetch","data","json","ok","console","error","categoriesRes","companiesRes","Promise","all","categoriesData","Array","isArray","companiesData","handleInputChange","e","name","value","target","prev","handleAddProduct","preventDefault","requiredFields","missingFields","filter","field","join","productDetails","addedBy","addedToDbAt","toISOString","method","headers","body","JSON","stringify","success","handleUpdateProduct","$set","handleDelete","productId","window","confirm","then","catch","renderPagination","pages","i","push","item","index"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/src/pages/Dashboard/Products/NonPharmacyProducts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SaveButton from '../../../components/buttons/SaveButton';\r\nimport CancelButton from '../../../components/buttons/CancelButton';\r\nimport PrintButton from '../../../components/buttons/PrintButton';\r\nimport NewButton from '../../../components/buttons/NewButton';\r\nimport Input from '../../../components/form/Input';\r\nimport Select from '../../../components/form/Select';\r\nimport DoubleInput from '../../../components/form/DoubleInput';\r\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\r\nimport ModalHeading from '../../../components/headings/ModalHeading';\r\nimport RefreshButton from '../../../components/buttons/RefreshButton';\r\nimport TableRow from '../../../components/TableRow';\r\nimport EditButton from '../../../components/buttons/EditButton';\r\nimport DeleteButton from '../../../components/buttons/DeleteButton';\r\nimport { toast } from 'react-toastify';\r\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\r\nimport AddModal from '../../../components/modals/AddModal';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy';\r\n\r\nconst NonPharmacyProducts = () => {\r\n    const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [productsPerPage, setProductsPerPage] = useState(10);\r\n    const [categories, setCategories] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [currentProduct, setCurrentProduct] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        Product_name: '',\r\n        Category: '',\r\n        Company: '',\r\n        Description: '',\r\n        Price: '',\r\n        Discount: '',\r\n        Stock: '',\r\n        Status: 'Active',\r\n        Pack_Type: '',\r\n        Pack_TP: '',\r\n        Pack_MRP: ''\r\n    });\r\n\r\n    // Function to render category options\r\n    const renderCategoryOptions = () => {\r\n        return (\r\n            <>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category) => (\r\n                    <option key={category._id} value={category.Name}>\r\n                        {category.Name}\r\n                    </option>\r\n                ))}\r\n            </>\r\n        );\r\n    };\r\n\r\n    // Function to render company options\r\n    const renderCompanyOptions = () => {\r\n        return (\r\n            <>\r\n                <option value=\"\">Select Company</option>\r\n                {companies.map((company) => (\r\n                    <option key={company._id} value={company.Name}>\r\n                        {company.Name}\r\n                    </option>\r\n                ))}\r\n            </>\r\n        );\r\n    };\r\n\r\n    // Function to handle opening the add modal\r\n    const handleOpenAddModal = () => {\r\n        // Reset form data\r\n        setFormData({\r\n            Product_name: '',\r\n            Category: '',\r\n            Company: '',\r\n            Description: '',\r\n            Price: '',\r\n            Discount: '',\r\n            Stock: '',\r\n            Status: 'Active',\r\n            Pack_Type: '',\r\n            Pack_TP: '',\r\n            Pack_MRP: ''\r\n        });\r\n        \r\n        // Check if dropdown data is loaded\r\n        if (categories.length === 0 || companies.length === 0) {\r\n            // If data isn't loaded yet, fetch it first\r\n            fetchDropdownData();\r\n            toast.info(\"Loading form data...\");\r\n        }\r\n        \r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    // Function to handle opening the edit modal\r\n    const handleOpenEditModal = (product) => {\r\n        setCurrentProduct(product);\r\n        setFormData({\r\n            Product_name: product.Product_name || '',\r\n            Category: product.Category || '',\r\n            Company: product.Company || '',\r\n            Description: product.Description || '',\r\n            Price: product.Price || '',\r\n            Discount: product.Discount || '',\r\n            Stock: product.Stock || '',\r\n            Status: product.Status || 'Active',\r\n            Pack_Type: product.Pack_Type || '',\r\n            Pack_TP: product.Pack_TP || '',\r\n            Pack_MRP: product.Pack_MRP || ''\r\n        });\r\n        \r\n        // Check if dropdown data is loaded\r\n        if (categories.length === 0 || companies.length === 0) {\r\n            fetchDropdownData();\r\n        }\r\n        \r\n        setIsEditModalOpen(true);\r\n    };\r\n\r\n    // Function to handle refresh\r\n    const handleRefresh = () => {\r\n        fetchProducts(currentPage, productsPerPage, true);\r\n    };\r\n\r\n    // Fetch Non-Pharmacy Products\r\n    const fetchProducts = async (page = 1, limit = productsPerPage, forceRefresh = false) => {\r\n        try {\r\n            // Add a cache-busting parameter if forceRefresh is true\r\n            const cacheBuster = forceRefresh ? `&_=${Date.now()}` : '';\r\n            const fetchUrl = `${API_BASE_URL}?page=${page}&limit=${limit}${cacheBuster}`;\r\n            \r\n            const response = await fetch(fetchUrl);\r\n            const data = await response.json();\r\n            \r\n            if (response.ok) {\r\n                setNonPharmacyProducts(data.data);\r\n                setTotalPages(data.totalPages || 1);\r\n            } else {\r\n                console.error('Error fetching products:', data);\r\n                toast.error('Failed to fetch products');\r\n                setNonPharmacyProducts([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            toast.error('Network error occurred');\r\n            setNonPharmacyProducts([]);\r\n        }\r\n    };\r\n\r\n    // Separate function to fetch dropdown data\r\n    const fetchDropdownData = async () => {\r\n        try {\r\n            const [categoriesRes, companiesRes] = await Promise.all([\r\n                fetch(`http://localhost:5000/api/setup/categories`),\r\n                fetch(`http://localhost:5000/api/setup/companies`),\r\n            ]);\r\n            \r\n            if (categoriesRes.ok) {\r\n                const categoriesData = await categoriesRes.json();\r\n                // Check if the data is in the expected format\r\n                if (Array.isArray(categoriesData)) {\r\n                    setCategories(categoriesData);\r\n                } else if (categoriesData.data && Array.isArray(categoriesData.data)) {\r\n                    setCategories(categoriesData.data);\r\n                } else {\r\n                    toast.error(\"Invalid categories data format\");\r\n                }\r\n            } else {\r\n                toast.error(\"Failed to load categories\");\r\n            }\r\n            \r\n            if (companiesRes.ok) {\r\n                const companiesData = await companiesRes.json();\r\n                // Check if the data is in the expected format\r\n                if (Array.isArray(companiesData)) {\r\n                    setCompanies(companiesData);\r\n                } else if (companiesData.data && Array.isArray(companiesData.data)) {\r\n                    setCompanies(companiesData.data);\r\n                } else {\r\n                    toast.error(\"Invalid companies data format\");\r\n                }\r\n            } else {\r\n                toast.error(\"Failed to load companies\");\r\n            }\r\n        } catch (error) {\r\n            toast.error('Failed to load form data');\r\n        }\r\n    };\r\n\r\n    // Fetch products when the page changes\r\n    useEffect(() => {\r\n        fetchProducts(currentPage, productsPerPage);\r\n    }, [currentPage, productsPerPage]);\r\n\r\n    // Fetch dropdown data when component mounts\r\n    useEffect(() => {\r\n        fetchDropdownData();\r\n    }, []);\r\n\r\n    // Function to handle input changes\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Add New Product\r\n    const handleAddProduct = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Check for required fields\r\n        const requiredFields = ['Product_name', 'Category', 'Company', 'Stock'];\r\n        const missingFields = requiredFields.filter(field => !formData[field]);\r\n        \r\n        if (missingFields.length > 0) {\r\n            toast.error(`Missing required fields: ${missingFields.join(', ')}`);\r\n            return;\r\n        }\r\n        \r\n        const productDetails = {\r\n            ...formData,\r\n            addedBy: 'admin',\r\n            addedToDbAt: new Date().toISOString()\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(API_BASE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(productDetails),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                // Close the modal\r\n                setIsModalOpen(false);\r\n                \r\n                // Show success message\r\n                toast.success(`Product ${productDetails.Product_name} added successfully`);\r\n                \r\n                // Refresh the product list\r\n                handleRefresh();\r\n                \r\n                // Reset form data\r\n                setFormData({\r\n                    Product_name: '',\r\n                    Category: '',\r\n                    Company: '',\r\n                    Description: '',\r\n                    Price: '',\r\n                    Discount: '',\r\n                    Stock: '',\r\n                    Status: 'Active',\r\n                    Pack_Type: '',\r\n                    Pack_TP: '',\r\n                    Pack_MRP: ''\r\n                });\r\n            } else {\r\n                console.error('Error adding product:', data);\r\n                toast.error(`Failed to add product: ${data.error || 'Unknown error'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            toast.error('Network error occurred');\r\n        }\r\n    };\r\n\r\n    // Update Product\r\n    const handleUpdateProduct = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!currentProduct) {\r\n            toast.error('No product selected for update');\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/${currentProduct._id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    $set: formData\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                toast.success('Product updated successfully');\r\n                setIsEditModalOpen(false);\r\n                handleRefresh();\r\n            } else {\r\n                toast.error('Failed to update product');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            toast.error('Error updating product');\r\n        }\r\n    };\r\n    \r\n    // Function to handle product deletion\r\n    const handleDelete = (productId) => {\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            fetch(`${API_BASE_URL}/${productId}`, {\r\n                method: 'DELETE',\r\n            })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    toast.success('Product deleted successfully');\r\n                    handleRefresh();\r\n                } else {\r\n                    toast.error('Failed to delete product');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error deleting product:', error);\r\n                toast.error('Error deleting product');\r\n            });\r\n        }\r\n    };\r\n\r\n    // Render pagination\r\n    const renderPagination = () => {\r\n        const pages = [];\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <button\r\n                    key={i}\r\n                    className={`btn ${currentPage === i ? 'btn-primary' : 'btn-ghost'}`}\r\n                    onClick={() => setCurrentPage(i)}\r\n                >\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n        return pages;\r\n    };\r\n\r\n    return (\r\n        <section className='p-4 mt-16'>\r\n            <DashboardPageHeading\r\n                name={`Non Pharmacy Products (${nonPharmacyProducts.length})`}\r\n                value={nonPharmacyProducts.length}\r\n                buttons={[\r\n                    <NewButton key=\"new-button\" onClick={handleOpenAddModal} />,\r\n                    <RefreshButton key=\"refresh-button\" onClick={handleRefresh} />,\r\n                    <PrintButton key=\"print-button\" />\r\n                ]}\r\n            />\r\n\r\n            {/* Products Table */}\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"table table-zebra table-compact w-full\">\r\n                    <thead>\r\n                        <tr>\r\n                            {['SN', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => (\r\n                                <th key={index} className='text-xs md:text-sm'>{item}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {nonPharmacyProducts.map((product, index) => (\r\n                            <tr key={product._id}>\r\n                                <td>{(currentPage - 1) * productsPerPage + index + 1}</td>\r\n                                <td>{product.Product_name || 'N/A'}</td>\r\n                                <td>{product.Category || 'N/A'}</td>\r\n                                <td>{product.Company || 'N/A'}</td>\r\n                                <td>{product.Stock || 'N/A'}</td>\r\n                                <td>{product.Pack_Type || 'N/A'}</td>\r\n                                <td>{product.Pack_TP || 'N/A'}</td>\r\n                                <td>{product.Pack_MRP || 'N/A'}</td>\r\n                                <td className=\"flex space-x-1\">\r\n                                    <button\r\n                                        onClick={() => handleOpenEditModal(product)}\r\n                                        className=\"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleDelete(product._id)}\r\n                                        className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"flex justify-center mt-4 gap-2\">\r\n                {renderPagination()}\r\n            </div>\r\n\r\n            {/* Add New Product Modal */}\r\n            {isModalOpen && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white p-6 rounded-lg w-full max-w-2xl\">\r\n                        <div className=\"flex justify-between items-center mb-4\">\r\n                            <ModalHeading>Add New Non-Pharmacy Product</ModalHeading>\r\n                            <ModalCloseButton onClick={() => setIsModalOpen(false)} />\r\n                        </div>\r\n                        <form onSubmit={handleAddProduct} className=\"space-y-4\">\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                <Input \r\n                                    label=\"Product Name\" \r\n                                    name=\"Product_name\" \r\n                                    value={formData.Product_name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter product name\" \r\n                                    required \r\n                                />\r\n                                \r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"category\" className=\"form-label\">\r\n                                        Category\r\n                                    </label>\r\n                                    <select\r\n                                        className=\"form-select w-full p-2 border border-gray-300 rounded\"\r\n                                        id=\"category\"\r\n                                        name=\"Category\"\r\n                                        value={formData.Category || \"\"}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    >\r\n                                        {renderCategoryOptions()}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"company\" className=\"form-label\">\r\n                                        Company\r\n                                    </label>\r\n                                    <select\r\n                                        className=\"form-select w-full p-2 border border-gray-300 rounded\"\r\n                                        id=\"company\"\r\n                                        name=\"Company\"\r\n                                        value={formData.Company || \"\"}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    >\r\n                                        {renderCompanyOptions()}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <Input \r\n                                    label=\"Description\" \r\n                                    name=\"Description\" \r\n                                    value={formData.Description}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter description\" \r\n                                />\r\n                                \r\n                                <Input \r\n                                    label=\"Stock\" \r\n                                    name=\"Stock\" \r\n                                    value={formData.Stock}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter stock quantity\" \r\n                                    type=\"number\"\r\n                                    required \r\n                                />\r\n                                \r\n                                <Input \r\n                                    label=\"Pack Type\" \r\n                                    name=\"Pack_Type\" \r\n                                    value={formData.Pack_Type}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter pack type\" \r\n                                />\r\n                                \r\n                                <DoubleInput \r\n                                    label1=\"Price\" \r\n                                    name1=\"Price\" \r\n                                    value1={formData.Price}\r\n                                    onChange1={handleInputChange}\r\n                                    placeholder1=\"Enter price\" \r\n                                    label2=\"Discount\" \r\n                                    name2=\"Discount\" \r\n                                    value2={formData.Discount}\r\n                                    onChange2={handleInputChange}\r\n                                    placeholder2=\"Enter discount\" \r\n                                />\r\n                                \r\n                                <DoubleInput \r\n                                    label1=\"Pack TP\" \r\n                                    name1=\"Pack_TP\" \r\n                                    value1={formData.Pack_TP}\r\n                                    onChange1={handleInputChange}\r\n                                    placeholder1=\"Enter pack TP\" \r\n                                    label2=\"Pack MRP\" \r\n                                    name2=\"Pack_MRP\" \r\n                                    value2={formData.Pack_MRP}\r\n                                    onChange2={handleInputChange}\r\n                                    placeholder2=\"Enter pack MRP\" \r\n                                />\r\n                                \r\n                                <Select\r\n                                    label=\"Status\"\r\n                                    name=\"Status\"\r\n                                    value={formData.Status}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"Active\">Active</option>\r\n                                    <option value=\"Inactive\">Inactive</option>\r\n                                </Select>\r\n                            </div>\r\n                            \r\n                            <div className=\"flex justify-end gap-2\">\r\n                                <CancelButton onClick={() => setIsModalOpen(false)} />\r\n                                <SaveButton type=\"submit\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Edit Product Modal */}\r\n            {isEditModalOpen && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white p-6 rounded-lg w-full max-w-2xl\">\r\n                        <div className=\"flex justify-between items-center mb-4\">\r\n                            <ModalHeading>Edit Non-Pharmacy Product</ModalHeading>\r\n                            <ModalCloseButton onClick={() => setIsEditModalOpen(false)} />\r\n                        </div>\r\n                        <form onSubmit={handleUpdateProduct} className=\"space-y-4\">\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                <Input \r\n                                    label=\"Product Name\" \r\n                                    name=\"Product_name\" \r\n                                    value={formData.Product_name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter product name\" \r\n                                    required \r\n                                />\r\n                                \r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"edit-category\" className=\"form-label\">\r\n                                        Category\r\n                                    </label>\r\n                                    <select\r\n                                        className=\"form-select w-full p-2 border border-gray-300 rounded\"\r\n                                        id=\"edit-category\"\r\n                                        name=\"Category\"\r\n                                        value={formData.Category || \"\"}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    >\r\n                                        {renderCategoryOptions()}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"edit-company\" className=\"form-label\">\r\n                                        Company\r\n                                    </label>\r\n                                    <select\r\n                                        className=\"form-select w-full p-2 border border-gray-300 rounded\"\r\n                                        id=\"edit-company\"\r\n                                        name=\"Company\"\r\n                                        value={formData.Company || \"\"}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                    >\r\n                                        {renderCompanyOptions()}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <Input \r\n                                    label=\"Description\" \r\n                                    name=\"Description\" \r\n                                    value={formData.Description}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter description\" \r\n                                />\r\n                                \r\n                                <Input \r\n                                    label=\"Stock\" \r\n                                    name=\"Stock\" \r\n                                    value={formData.Stock}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter stock quantity\" \r\n                                    type=\"number\"\r\n                                    required \r\n                                />\r\n                                \r\n                                <Input \r\n                                    label=\"Pack Type\" \r\n                                    name=\"Pack_Type\" \r\n                                    value={formData.Pack_Type}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter pack type\" \r\n                                />\r\n                                \r\n                                <DoubleInput \r\n                                    label1=\"Price\" \r\n                                    name1=\"Price\" \r\n                                    value1={formData.Price}\r\n                                    onChange1={handleInputChange}\r\n                                    placeholder1=\"Enter price\" \r\n                                    label2=\"Discount\" \r\n                                    name2=\"Discount\" \r\n                                    value2={formData.Discount}\r\n                                    onChange2={handleInputChange}\r\n                                    placeholder2=\"Enter discount\" \r\n                                />\r\n                                \r\n                                <DoubleInput \r\n                                    label1=\"Pack TP\" \r\n                                    name1=\"Pack_TP\" \r\n                                    value1={formData.Pack_TP}\r\n                                    onChange1={handleInputChange}\r\n                                    placeholder1=\"Enter pack TP\" \r\n                                    label2=\"Pack MRP\" \r\n                                    name2=\"Pack_MRP\" \r\n                                    value2={formData.Pack_MRP}\r\n                                    onChange2={handleInputChange}\r\n                                    placeholder2=\"Enter pack MRP\" \r\n                                />\r\n                                \r\n                                <Select\r\n                                    label=\"Status\"\r\n                                    name=\"Status\"\r\n                                    value={formData.Status}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"Active\">Active</option>\r\n                                    <option value=\"Inactive\">Inactive</option>\r\n                                </Select>\r\n                            </div>\r\n                            \r\n                            <div className=\"flex justify-end gap-2\">\r\n                                <CancelButton onClick={() => setIsEditModalOpen(false)} />\r\n                                <SaveButton type=\"submit\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default NonPharmacyProducts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,oBAAP,MAAiC,mDAAjC;AACA,OAAOC,QAAP,MAAqB,qCAArB;;;AAEA,MAAMC,YAAY,GAAG,gDAArB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDrB,QAAQ,CAAC,EAAD,CAA9D;EACA,MAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACkC,eAAD,EAAkBC,kBAAlB,IAAwCnC,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC;IACrCwC,YAAY,EAAE,EADuB;IAErCC,QAAQ,EAAE,EAF2B;IAGrCC,OAAO,EAAE,EAH4B;IAIrCC,WAAW,EAAE,EAJwB;IAKrCC,KAAK,EAAE,EAL8B;IAMrCC,QAAQ,EAAE,EAN2B;IAOrCC,KAAK,EAAE,EAP8B;IAQrCC,MAAM,EAAE,QAR6B;IASrCC,SAAS,EAAE,EAT0B;IAUrCC,OAAO,EAAE,EAV4B;IAWrCC,QAAQ,EAAE;EAX2B,CAAD,CAAxC,CAV8B,CAwB9B;;EACA,MAAMC,qBAAqB,GAAG,MAAM;IAChC,oBACI;MAAA,wBACI;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKvB,UAAU,CAACwB,GAAX,CAAgBC,QAAD,iBACZ;QAA2B,KAAK,EAAEA,QAAQ,CAACC,IAA3C;QAAA,UACKD,QAAQ,CAACC;MADd,GAAaD,QAAQ,CAACE,GAAtB;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA,gBADJ;EAUH,CAXD,CAzB8B,CAsC9B;;;EACA,MAAMC,oBAAoB,GAAG,MAAM;IAC/B,oBACI;MAAA,wBACI;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEK1B,SAAS,CAACsB,GAAV,CAAeK,OAAD,iBACX;QAA0B,KAAK,EAAEA,OAAO,CAACH,IAAzC;QAAA,UACKG,OAAO,CAACH;MADb,GAAaG,OAAO,CAACF,GAArB;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA,gBADJ;EAUH,CAXD,CAvC8B,CAoD9B;;;EACA,MAAMG,kBAAkB,GAAG,MAAM;IAC7B;IACAnB,WAAW,CAAC;MACRC,YAAY,EAAE,EADN;MAERC,QAAQ,EAAE,EAFF;MAGRC,OAAO,EAAE,EAHD;MAIRC,WAAW,EAAE,EAJL;MAKRC,KAAK,EAAE,EALC;MAMRC,QAAQ,EAAE,EANF;MAORC,KAAK,EAAE,EAPC;MAQRC,MAAM,EAAE,QARA;MASRC,SAAS,EAAE,EATH;MAURC,OAAO,EAAE,EAVD;MAWRC,QAAQ,EAAE;IAXF,CAAD,CAAX,CAF6B,CAgB7B;;IACA,IAAItB,UAAU,CAAC+B,MAAX,KAAsB,CAAtB,IAA2B7B,SAAS,CAAC6B,MAAV,KAAqB,CAApD,EAAuD;MACnD;MACAC,iBAAiB;MACjB7C,KAAK,CAAC8C,IAAN,CAAW,sBAAX;IACH;;IAED5B,cAAc,CAAC,IAAD,CAAd;EACH,CAxBD,CArD8B,CA+E9B;;;EACA,MAAM6B,mBAAmB,GAAIC,OAAD,IAAa;IACrC1B,iBAAiB,CAAC0B,OAAD,CAAjB;IACAxB,WAAW,CAAC;MACRC,YAAY,EAAEuB,OAAO,CAACvB,YAAR,IAAwB,EAD9B;MAERC,QAAQ,EAAEsB,OAAO,CAACtB,QAAR,IAAoB,EAFtB;MAGRC,OAAO,EAAEqB,OAAO,CAACrB,OAAR,IAAmB,EAHpB;MAIRC,WAAW,EAAEoB,OAAO,CAACpB,WAAR,IAAuB,EAJ5B;MAKRC,KAAK,EAAEmB,OAAO,CAACnB,KAAR,IAAiB,EALhB;MAMRC,QAAQ,EAAEkB,OAAO,CAAClB,QAAR,IAAoB,EANtB;MAORC,KAAK,EAAEiB,OAAO,CAACjB,KAAR,IAAiB,EAPhB;MAQRC,MAAM,EAAEgB,OAAO,CAAChB,MAAR,IAAkB,QARlB;MASRC,SAAS,EAAEe,OAAO,CAACf,SAAR,IAAqB,EATxB;MAURC,OAAO,EAAEc,OAAO,CAACd,OAAR,IAAmB,EAVpB;MAWRC,QAAQ,EAAEa,OAAO,CAACb,QAAR,IAAoB;IAXtB,CAAD,CAAX,CAFqC,CAgBrC;;IACA,IAAItB,UAAU,CAAC+B,MAAX,KAAsB,CAAtB,IAA2B7B,SAAS,CAAC6B,MAAV,KAAqB,CAApD,EAAuD;MACnDC,iBAAiB;IACpB;;IAEDzB,kBAAkB,CAAC,IAAD,CAAlB;EACH,CAtBD,CAhF8B,CAwG9B;;;EACA,MAAM6B,aAAa,GAAG,MAAM;IACxBC,aAAa,CAACzC,WAAD,EAAcE,eAAd,EAA+B,IAA/B,CAAb;EACH,CAFD,CAzG8B,CA6G9B;;;EACA,MAAMuC,aAAa,GAAG,kBAAmE;IAAA,IAA5DC,IAA4D,uEAArD,CAAqD;IAAA,IAAlDC,KAAkD,uEAA1CzC,eAA0C;IAAA,IAAzB0C,YAAyB,uEAAV,KAAU;;IACrF,IAAI;MACA;MACA,MAAMC,WAAW,GAAGD,YAAY,GAAI,MAAKE,IAAI,CAACC,GAAL,EAAW,EAApB,GAAwB,EAAxD;MACA,MAAMC,QAAQ,GAAI,GAAEtD,YAAa,SAAQgD,IAAK,UAASC,KAAM,GAAEE,WAAY,EAA3E;MAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;MACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MAEA,IAAIH,QAAQ,CAACI,EAAb,EAAiB;QACbxD,sBAAsB,CAACsD,IAAI,CAACA,IAAN,CAAtB;QACApD,aAAa,CAACoD,IAAI,CAACrD,UAAL,IAAmB,CAApB,CAAb;MACH,CAHD,MAGO;QACHwD,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CJ,IAA1C;QACA5D,KAAK,CAACgE,KAAN,CAAY,0BAAZ;QACA1D,sBAAsB,CAAC,EAAD,CAAtB;MACH;IACJ,CAhBD,CAgBE,OAAO0D,KAAP,EAAc;MACZD,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBA,KAAxB;MACAhE,KAAK,CAACgE,KAAN,CAAY,wBAAZ;MACA1D,sBAAsB,CAAC,EAAD,CAAtB;IACH;EACJ,CAtBD,CA9G8B,CAsI9B;;;EACA,MAAMuC,iBAAiB,GAAG,YAAY;IAClC,IAAI;MACA,MAAM,CAACoB,aAAD,EAAgBC,YAAhB,IAAgC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACpDT,KAAK,CAAE,4CAAF,CAD+C,EAEpDA,KAAK,CAAE,2CAAF,CAF+C,CAAZ,CAA5C;;MAKA,IAAIM,aAAa,CAACH,EAAlB,EAAsB;QAClB,MAAMO,cAAc,GAAG,MAAMJ,aAAa,CAACJ,IAAd,EAA7B,CADkB,CAElB;;QACA,IAAIS,KAAK,CAACC,OAAN,CAAcF,cAAd,CAAJ,EAAmC;UAC/BvD,aAAa,CAACuD,cAAD,CAAb;QACH,CAFD,MAEO,IAAIA,cAAc,CAACT,IAAf,IAAuBU,KAAK,CAACC,OAAN,CAAcF,cAAc,CAACT,IAA7B,CAA3B,EAA+D;UAClE9C,aAAa,CAACuD,cAAc,CAACT,IAAhB,CAAb;QACH,CAFM,MAEA;UACH5D,KAAK,CAACgE,KAAN,CAAY,gCAAZ;QACH;MACJ,CAVD,MAUO;QACHhE,KAAK,CAACgE,KAAN,CAAY,2BAAZ;MACH;;MAED,IAAIE,YAAY,CAACJ,EAAjB,EAAqB;QACjB,MAAMU,aAAa,GAAG,MAAMN,YAAY,CAACL,IAAb,EAA5B,CADiB,CAEjB;;QACA,IAAIS,KAAK,CAACC,OAAN,CAAcC,aAAd,CAAJ,EAAkC;UAC9BxD,YAAY,CAACwD,aAAD,CAAZ;QACH,CAFD,MAEO,IAAIA,aAAa,CAACZ,IAAd,IAAsBU,KAAK,CAACC,OAAN,CAAcC,aAAa,CAACZ,IAA5B,CAA1B,EAA6D;UAChE5C,YAAY,CAACwD,aAAa,CAACZ,IAAf,CAAZ;QACH,CAFM,MAEA;UACH5D,KAAK,CAACgE,KAAN,CAAY,+BAAZ;QACH;MACJ,CAVD,MAUO;QACHhE,KAAK,CAACgE,KAAN,CAAY,0BAAZ;MACH;IACJ,CAjCD,CAiCE,OAAOA,KAAP,EAAc;MACZhE,KAAK,CAACgE,KAAN,CAAY,0BAAZ;IACH;EACJ,CArCD,CAvI8B,CA8K9B;;;EACA9E,SAAS,CAAC,MAAM;IACZgE,aAAa,CAACzC,WAAD,EAAcE,eAAd,CAAb;EACH,CAFQ,EAEN,CAACF,WAAD,EAAcE,eAAd,CAFM,CAAT,CA/K8B,CAmL9B;;EACAzB,SAAS,CAAC,MAAM;IACZ2D,iBAAiB;EACpB,CAFQ,EAEN,EAFM,CAAT,CApL8B,CAwL9B;;EACA,MAAM4B,iBAAiB,GAAIC,CAAD,IAAO;IAC7B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,CAAC,CAACG,MAA1B;IACArD,WAAW,CAACsD,IAAI,KAAK,EACjB,GAAGA,IADc;MAEjB,CAACH,IAAD,GAAQC;IAFS,CAAL,CAAL,CAAX;EAIH,CAND,CAzL8B,CAiM9B;;;EACA,MAAMG,gBAAgB,GAAG,MAAOL,CAAP,IAAa;IAClCA,CAAC,CAACM,cAAF,GADkC,CAGlC;;IACA,MAAMC,cAAc,GAAG,CAAC,cAAD,EAAiB,UAAjB,EAA6B,SAA7B,EAAwC,OAAxC,CAAvB;IACA,MAAMC,aAAa,GAAGD,cAAc,CAACE,MAAf,CAAsBC,KAAK,IAAI,CAAC7D,QAAQ,CAAC6D,KAAD,CAAxC,CAAtB;;IAEA,IAAIF,aAAa,CAACtC,MAAd,GAAuB,CAA3B,EAA8B;MAC1B5C,KAAK,CAACgE,KAAN,CAAa,4BAA2BkB,aAAa,CAACG,IAAd,CAAmB,IAAnB,CAAyB,EAAjE;MACA;IACH;;IAED,MAAMC,cAAc,GAAG,EACnB,GAAG/D,QADgB;MAEnBgE,OAAO,EAAE,OAFU;MAGnBC,WAAW,EAAE,IAAIjC,IAAJ,GAAWkC,WAAX;IAHM,CAAvB;;IAMA,IAAI;MACA,MAAM/B,QAAQ,GAAG,MAAMC,KAAK,CAACxD,YAAD,EAAe;QACvCuF,MAAM,EAAE,MAD+B;QAEvCC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAF8B;QAGvCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,cAAf;MAHiC,CAAf,CAA5B;MAMA,MAAM1B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MAEA,IAAIH,QAAQ,CAACI,EAAb,EAAiB;QACb;QACA5C,cAAc,CAAC,KAAD,CAAd,CAFa,CAIb;;QACAlB,KAAK,CAAC+F,OAAN,CAAe,WAAUT,cAAc,CAAC7D,YAAa,qBAArD,EALa,CAOb;;QACAwB,aAAa,GARA,CAUb;;QACAzB,WAAW,CAAC;UACRC,YAAY,EAAE,EADN;UAERC,QAAQ,EAAE,EAFF;UAGRC,OAAO,EAAE,EAHD;UAIRC,WAAW,EAAE,EAJL;UAKRC,KAAK,EAAE,EALC;UAMRC,QAAQ,EAAE,EANF;UAORC,KAAK,EAAE,EAPC;UAQRC,MAAM,EAAE,QARA;UASRC,SAAS,EAAE,EATH;UAURC,OAAO,EAAE,EAVD;UAWRC,QAAQ,EAAE;QAXF,CAAD,CAAX;MAaH,CAxBD,MAwBO;QACH4B,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCJ,IAAvC;QACA5D,KAAK,CAACgE,KAAN,CAAa,0BAAyBJ,IAAI,CAACI,KAAL,IAAc,eAAgB,EAApE;MACH;IACJ,CArCD,CAqCE,OAAOA,KAAP,EAAc;MACZD,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBA,KAAxB;MACAhE,KAAK,CAACgE,KAAN,CAAY,wBAAZ;IACH;EACJ,CA3DD,CAlM8B,CA+P9B;;;EACA,MAAMgC,mBAAmB,GAAG,MAAOtB,CAAP,IAAa;IACrCA,CAAC,CAACM,cAAF;;IAEA,IAAI,CAAC3D,cAAL,EAAqB;MACjBrB,KAAK,CAACgE,KAAN,CAAY,gCAAZ;MACA;IACH;;IAED,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAExD,YAAa,IAAGkB,cAAc,CAACmB,GAAI,EAAvC,EAA0C;QAClEkD,MAAM,EAAE,KAD0D;QAElEC,OAAO,EAAE;UACL,gBAAgB;QADX,CAFyD;QAKlEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBG,IAAI,EAAE1E;QADW,CAAf;MAL4D,CAA1C,CAA5B;;MAUA,IAAImC,QAAQ,CAACI,EAAb,EAAiB;QACb9D,KAAK,CAAC+F,OAAN,CAAc,8BAAd;QACA3E,kBAAkB,CAAC,KAAD,CAAlB;QACA6B,aAAa;MAChB,CAJD,MAIO;QACHjD,KAAK,CAACgE,KAAN,CAAY,0BAAZ;MACH;IACJ,CAlBD,CAkBE,OAAOA,KAAP,EAAc;MACZD,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;MACAhE,KAAK,CAACgE,KAAN,CAAY,wBAAZ;IACH;EACJ,CA9BD,CAhQ8B,CAgS9B;;;EACA,MAAMkC,YAAY,GAAIC,SAAD,IAAe;IAChC,IAAIC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAJ,EAAqE;MACjE1C,KAAK,CAAE,GAAExD,YAAa,IAAGgG,SAAU,EAA9B,EAAiC;QAClCT,MAAM,EAAE;MAD0B,CAAjC,CAAL,CAGCY,IAHD,CAGM5C,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACI,EAAb,EAAiB;UACb9D,KAAK,CAAC+F,OAAN,CAAc,8BAAd;UACA9C,aAAa;QAChB,CAHD,MAGO;UACHjD,KAAK,CAACgE,KAAN,CAAY,0BAAZ;QACH;MACJ,CAVD,EAWCuC,KAXD,CAWOvC,KAAK,IAAI;QACZD,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;QACAhE,KAAK,CAACgE,KAAN,CAAY,wBAAZ;MACH,CAdD;IAeH;EACJ,CAlBD,CAjS8B,CAqT9B;;;EACA,MAAMwC,gBAAgB,GAAG,MAAM;IAC3B,MAAMC,KAAK,GAAG,EAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAInG,UAArB,EAAiCmG,CAAC,EAAlC,EAAsC;MAClCD,KAAK,CAACE,IAAN,eACI;QAEI,SAAS,EAAG,OAAMlG,WAAW,KAAKiG,CAAhB,GAAoB,aAApB,GAAoC,WAAY,EAFtE;QAGI,OAAO,EAAE,MAAMhG,cAAc,CAACgG,CAAD,CAHjC;QAAA,UAKKA;MALL,GACSA,CADT;QAAA;QAAA;QAAA;MAAA,QADJ;IASH;;IACD,OAAOD,KAAP;EACH,CAdD;;EAgBA,oBACI;IAAS,SAAS,EAAC,WAAnB;IAAA,wBACI,QAAC,oBAAD;MACI,IAAI,EAAG,0BAAyBpG,mBAAmB,CAACuC,MAAO,GAD/D;MAEI,KAAK,EAAEvC,mBAAmB,CAACuC,MAF/B;MAGI,OAAO,EAAE,cACL,QAAC,SAAD;QAA4B,OAAO,EAAED;MAArC,GAAe,YAAf;QAAA;QAAA;QAAA;MAAA,QADK,eAEL,QAAC,aAAD;QAAoC,OAAO,EAAEM;MAA7C,GAAmB,gBAAnB;QAAA;QAAA;QAAA;MAAA,QAFK,eAGL,QAAC,WAAD,MAAiB,cAAjB;QAAA;QAAA;QAAA;MAAA,QAHK;IAHb;MAAA;MAAA;MAAA;IAAA,QADJ,eAYI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACI;QAAO,SAAS,EAAC,wCAAjB;QAAA,wBACI;UAAA,uBACI;YAAA,UACK,CAAC,IAAD,EAAO,cAAP,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,OAA9C,EAAuD,WAAvD,EAAoE,SAApE,EAA+E,UAA/E,EAA2F,SAA3F,EAAsGZ,GAAtG,CAA0G,CAACuE,IAAD,EAAOC,KAAP,kBACvG;cAAgB,SAAS,EAAC,oBAA1B;cAAA,UAAgDD;YAAhD,GAASC,KAAT;cAAA;cAAA;cAAA;YAAA,QADH;UADL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAA,UACKxG,mBAAmB,CAACgC,GAApB,CAAwB,CAACW,OAAD,EAAU6D,KAAV,kBACrB;YAAA,wBACI;cAAA,UAAK,CAACpG,WAAW,GAAG,CAAf,IAAoBE,eAApB,GAAsCkG,KAAtC,GAA8C;YAAnD;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAA,UAAK7D,OAAO,CAACvB,YAAR,IAAwB;YAA7B;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI;cAAA,UAAKuB,OAAO,CAACtB,QAAR,IAAoB;YAAzB;cAAA;cAAA;cAAA;YAAA,QAHJ,eAII;cAAA,UAAKsB,OAAO,CAACrB,OAAR,IAAmB;YAAxB;cAAA;cAAA;cAAA;YAAA,QAJJ,eAKI;cAAA,UAAKqB,OAAO,CAACjB,KAAR,IAAiB;YAAtB;cAAA;cAAA;cAAA;YAAA,QALJ,eAMI;cAAA,UAAKiB,OAAO,CAACf,SAAR,IAAqB;YAA1B;cAAA;cAAA;cAAA;YAAA,QANJ,eAOI;cAAA,UAAKe,OAAO,CAACd,OAAR,IAAmB;YAAxB;cAAA;cAAA;cAAA;YAAA,QAPJ,eAQI;cAAA,UAAKc,OAAO,CAACb,QAAR,IAAoB;YAAzB;cAAA;cAAA;cAAA;YAAA,QARJ,eASI;cAAI,SAAS,EAAC,gBAAd;cAAA,wBACI;gBACI,OAAO,EAAE,MAAMY,mBAAmB,CAACC,OAAD,CADtC;gBAEI,SAAS,EAAC,4DAFd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAOI;gBACI,OAAO,EAAE,MAAMkD,YAAY,CAAClD,OAAO,CAACR,GAAT,CAD/B;gBAEI,SAAS,EAAC,0DAFd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPJ;YAAA;cAAA;cAAA;cAAA;YAAA,QATJ;UAAA,GAASQ,OAAO,CAACR,GAAjB;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAZJ,eAqDI;MAAK,SAAS,EAAC,gCAAf;MAAA,UACKgE,gBAAgB;IADrB;MAAA;MAAA;MAAA;IAAA,QArDJ,EA0DKvF,WAAW,iBACR;MAAK,SAAS,EAAC,4EAAf;MAAA,uBACI;QAAK,SAAS,EAAC,0CAAf;QAAA,wBACI;UAAK,SAAS,EAAC,wCAAf;UAAA,wBACI,QAAC,YAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,gBAAD;YAAkB,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD;UAA/C;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAM,QAAQ,EAAE6D,gBAAhB;UAAkC,SAAS,EAAC,WAA5C;UAAA,wBACI;YAAK,SAAS,EAAC,wBAAf;YAAA,wBACI,QAAC,KAAD;cACI,KAAK,EAAC,cADV;cAEI,IAAI,EAAC,cAFT;cAGI,KAAK,EAAExD,QAAQ,CAACE,YAHpB;cAII,QAAQ,EAAEgD,iBAJd;cAKI,WAAW,EAAC,oBALhB;cAMI,QAAQ;YANZ;cAAA;cAAA;cAAA;YAAA,QADJ,eAUI;cAAK,SAAS,EAAC,MAAf;cAAA,wBACI;gBAAO,OAAO,EAAC,UAAf;gBAA0B,SAAS,EAAC,YAApC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII;gBACI,SAAS,EAAC,uDADd;gBAEI,EAAE,EAAC,UAFP;gBAGI,IAAI,EAAC,UAHT;gBAII,KAAK,EAAElD,QAAQ,CAACG,QAAT,IAAqB,EAJhC;gBAKI,QAAQ,EAAE+C,iBALd;gBAMI,QAAQ,MANZ;gBAAA,UAQKrC,qBAAqB;cAR1B;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAVJ,eA0BI;cAAK,SAAS,EAAC,MAAf;cAAA,wBACI;gBAAO,OAAO,EAAC,SAAf;gBAAyB,SAAS,EAAC,YAAnC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII;gBACI,SAAS,EAAC,uDADd;gBAEI,EAAE,EAAC,SAFP;gBAGI,IAAI,EAAC,SAHT;gBAII,KAAK,EAAEb,QAAQ,CAACI,OAAT,IAAoB,EAJ/B;gBAKI,QAAQ,EAAE8C,iBALd;gBAMI,QAAQ,MANZ;gBAAA,UAQKhC,oBAAoB;cARzB;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA1BJ,eA0CI,QAAC,KAAD;cACI,KAAK,EAAC,aADV;cAEI,IAAI,EAAC,aAFT;cAGI,KAAK,EAAElB,QAAQ,CAACK,WAHpB;cAII,QAAQ,EAAE6C,iBAJd;cAKI,WAAW,EAAC;YALhB;cAAA;cAAA;cAAA;YAAA,QA1CJ,eAkDI,QAAC,KAAD;cACI,KAAK,EAAC,OADV;cAEI,IAAI,EAAC,OAFT;cAGI,KAAK,EAAElD,QAAQ,CAACQ,KAHpB;cAII,QAAQ,EAAE0C,iBAJd;cAKI,WAAW,EAAC,sBALhB;cAMI,IAAI,EAAC,QANT;cAOI,QAAQ;YAPZ;cAAA;cAAA;cAAA;YAAA,QAlDJ,eA4DI,QAAC,KAAD;cACI,KAAK,EAAC,WADV;cAEI,IAAI,EAAC,WAFT;cAGI,KAAK,EAAElD,QAAQ,CAACU,SAHpB;cAII,QAAQ,EAAEwC,iBAJd;cAKI,WAAW,EAAC;YALhB;cAAA;cAAA;cAAA;YAAA,QA5DJ,eAoEI,QAAC,WAAD;cACI,MAAM,EAAC,OADX;cAEI,KAAK,EAAC,OAFV;cAGI,MAAM,EAAElD,QAAQ,CAACM,KAHrB;cAII,SAAS,EAAE4C,iBAJf;cAKI,YAAY,EAAC,aALjB;cAMI,MAAM,EAAC,UANX;cAOI,KAAK,EAAC,UAPV;cAQI,MAAM,EAAElD,QAAQ,CAACO,QARrB;cASI,SAAS,EAAE2C,iBATf;cAUI,YAAY,EAAC;YAVjB;cAAA;cAAA;cAAA;YAAA,QApEJ,eAiFI,QAAC,WAAD;cACI,MAAM,EAAC,SADX;cAEI,KAAK,EAAC,SAFV;cAGI,MAAM,EAAElD,QAAQ,CAACW,OAHrB;cAII,SAAS,EAAEuC,iBAJf;cAKI,YAAY,EAAC,eALjB;cAMI,MAAM,EAAC,UANX;cAOI,KAAK,EAAC,UAPV;cAQI,MAAM,EAAElD,QAAQ,CAACY,QARrB;cASI,SAAS,EAAEsC,iBATf;cAUI,YAAY,EAAC;YAVjB;cAAA;cAAA;cAAA;YAAA,QAjFJ,eA8FI,QAAC,MAAD;cACI,KAAK,EAAC,QADV;cAEI,IAAI,EAAC,QAFT;cAGI,KAAK,EAAElD,QAAQ,CAACS,MAHpB;cAII,QAAQ,EAAEyC,iBAJd;cAAA,wBAMI;gBAAQ,KAAK,EAAC,QAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QANJ,eAOI;gBAAQ,KAAK,EAAC,UAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA9FJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eA0GI;YAAK,SAAS,EAAC,wBAAf;YAAA,wBACI,QAAC,YAAD;cAAc,OAAO,EAAE,MAAMvD,cAAc,CAAC,KAAD;YAA3C;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,UAAD;cAAY,IAAI,EAAC;YAAjB;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QA1GJ;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QA3DR,EAqLKC,eAAe,iBACZ;MAAK,SAAS,EAAC,4EAAf;MAAA,uBACI;QAAK,SAAS,EAAC,0CAAf;QAAA,wBACI;UAAK,SAAS,EAAC,wCAAf;UAAA,wBACI,QAAC,YAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,gBAAD;YAAkB,OAAO,EAAE,MAAMC,kBAAkB,CAAC,KAAD;UAAnD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAM,QAAQ,EAAE4E,mBAAhB;UAAqC,SAAS,EAAC,WAA/C;UAAA,wBACI;YAAK,SAAS,EAAC,wBAAf;YAAA,wBACI,QAAC,KAAD;cACI,KAAK,EAAC,cADV;cAEI,IAAI,EAAC,cAFT;cAGI,KAAK,EAAEzE,QAAQ,CAACE,YAHpB;cAII,QAAQ,EAAEgD,iBAJd;cAKI,WAAW,EAAC,oBALhB;cAMI,QAAQ;YANZ;cAAA;cAAA;cAAA;YAAA,QADJ,eAUI;cAAK,SAAS,EAAC,MAAf;cAAA,wBACI;gBAAO,OAAO,EAAC,eAAf;gBAA+B,SAAS,EAAC,YAAzC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII;gBACI,SAAS,EAAC,uDADd;gBAEI,EAAE,EAAC,eAFP;gBAGI,IAAI,EAAC,UAHT;gBAII,KAAK,EAAElD,QAAQ,CAACG,QAAT,IAAqB,EAJhC;gBAKI,QAAQ,EAAE+C,iBALd;gBAMI,QAAQ,MANZ;gBAAA,UAQKrC,qBAAqB;cAR1B;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAVJ,eA0BI;cAAK,SAAS,EAAC,MAAf;cAAA,wBACI;gBAAO,OAAO,EAAC,cAAf;gBAA8B,SAAS,EAAC,YAAxC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII;gBACI,SAAS,EAAC,uDADd;gBAEI,EAAE,EAAC,cAFP;gBAGI,IAAI,EAAC,SAHT;gBAII,KAAK,EAAEb,QAAQ,CAACI,OAAT,IAAoB,EAJ/B;gBAKI,QAAQ,EAAE8C,iBALd;gBAMI,QAAQ,MANZ;gBAAA,UAQKhC,oBAAoB;cARzB;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA1BJ,eA0CI,QAAC,KAAD;cACI,KAAK,EAAC,aADV;cAEI,IAAI,EAAC,aAFT;cAGI,KAAK,EAAElB,QAAQ,CAACK,WAHpB;cAII,QAAQ,EAAE6C,iBAJd;cAKI,WAAW,EAAC;YALhB;cAAA;cAAA;cAAA;YAAA,QA1CJ,eAkDI,QAAC,KAAD;cACI,KAAK,EAAC,OADV;cAEI,IAAI,EAAC,OAFT;cAGI,KAAK,EAAElD,QAAQ,CAACQ,KAHpB;cAII,QAAQ,EAAE0C,iBAJd;cAKI,WAAW,EAAC,sBALhB;cAMI,IAAI,EAAC,QANT;cAOI,QAAQ;YAPZ;cAAA;cAAA;cAAA;YAAA,QAlDJ,eA4DI,QAAC,KAAD;cACI,KAAK,EAAC,WADV;cAEI,IAAI,EAAC,WAFT;cAGI,KAAK,EAAElD,QAAQ,CAACU,SAHpB;cAII,QAAQ,EAAEwC,iBAJd;cAKI,WAAW,EAAC;YALhB;cAAA;cAAA;cAAA;YAAA,QA5DJ,eAoEI,QAAC,WAAD;cACI,MAAM,EAAC,OADX;cAEI,KAAK,EAAC,OAFV;cAGI,MAAM,EAAElD,QAAQ,CAACM,KAHrB;cAII,SAAS,EAAE4C,iBAJf;cAKI,YAAY,EAAC,aALjB;cAMI,MAAM,EAAC,UANX;cAOI,KAAK,EAAC,UAPV;cAQI,MAAM,EAAElD,QAAQ,CAACO,QARrB;cASI,SAAS,EAAE2C,iBATf;cAUI,YAAY,EAAC;YAVjB;cAAA;cAAA;cAAA;YAAA,QApEJ,eAiFI,QAAC,WAAD;cACI,MAAM,EAAC,SADX;cAEI,KAAK,EAAC,SAFV;cAGI,MAAM,EAAElD,QAAQ,CAACW,OAHrB;cAII,SAAS,EAAEuC,iBAJf;cAKI,YAAY,EAAC,eALjB;cAMI,MAAM,EAAC,UANX;cAOI,KAAK,EAAC,UAPV;cAQI,MAAM,EAAElD,QAAQ,CAACY,QARrB;cASI,SAAS,EAAEsC,iBATf;cAUI,YAAY,EAAC;YAVjB;cAAA;cAAA;cAAA;YAAA,QAjFJ,eA8FI,QAAC,MAAD;cACI,KAAK,EAAC,QADV;cAEI,IAAI,EAAC,QAFT;cAGI,KAAK,EAAElD,QAAQ,CAACS,MAHpB;cAII,QAAQ,EAAEyC,iBAJd;cAAA,wBAMI;gBAAQ,KAAK,EAAC,QAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QANJ,eAOI;gBAAQ,KAAK,EAAC,UAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA9FJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eA0GI;YAAK,SAAS,EAAC,wBAAf;YAAA,wBACI,QAAC,YAAD;cAAc,OAAO,EAAE,MAAMrD,kBAAkB,CAAC,KAAD;YAA/C;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,UAAD;cAAY,IAAI,EAAC;YAAjB;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QA1GJ;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAtLR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiTH,CAvnBD;;GAAMhB,mB;;KAAAA,mB;AAynBN,eAAeA,mBAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}