{"ast":null,"code":"import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n  const {\n    props\n  } = node;\n\n  if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n    return;\n  }\n\n  if (node.animationState && props.whileTap) {\n    node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n  }\n\n  const eventName = \"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle);\n  const callback = props[eventName];\n\n  if (callback) {\n    frame.postRender(() => callback(event, extractEventInfo(event)));\n  }\n}\n\nclass PressGesture extends Feature {\n  mount() {\n    const {\n      current\n    } = this.node;\n    if (!current) return;\n    this.unmount = press(current, (_element, startEvent) => {\n      handlePressEvent(this.node, startEvent, \"Start\");\n      return (endEvent, _ref) => {\n        let {\n          success\n        } = _ref;\n        return handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n      };\n    }, {\n      useGlobalTarget: this.node.props.globalTapTarget\n    });\n  }\n\n  unmount() {}\n\n}\n\nexport { PressGesture };","map":{"version":3,"names":["press","extractEventInfo","Feature","frame","handlePressEvent","node","event","lifecycle","props","current","HTMLButtonElement","disabled","animationState","whileTap","setActive","eventName","callback","postRender","PressGesture","mount","unmount","_element","startEvent","endEvent","success","useGlobalTarget","globalTapTarget"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;EAC9C,MAAM;IAAEC;EAAF,IAAYH,IAAlB;;EACA,IAAIA,IAAI,CAACI,OAAL,YAAwBC,iBAAxB,IAA6CL,IAAI,CAACI,OAAL,CAAaE,QAA9D,EAAwE;IACpE;EACH;;EACD,IAAIN,IAAI,CAACO,cAAL,IAAuBJ,KAAK,CAACK,QAAjC,EAA2C;IACvCR,IAAI,CAACO,cAAL,CAAoBE,SAApB,CAA8B,UAA9B,EAA0CP,SAAS,KAAK,OAAxD;EACH;;EACD,MAAMQ,SAAS,GAAI,WAAWR,SAAS,KAAK,KAAd,GAAsB,EAAtB,GAA2BA,SAAtC,CAAnB;EACA,MAAMS,QAAQ,GAAGR,KAAK,CAACO,SAAD,CAAtB;;EACA,IAAIC,QAAJ,EAAc;IACVb,KAAK,CAACc,UAAN,CAAiB,MAAMD,QAAQ,CAACV,KAAD,EAAQL,gBAAgB,CAACK,KAAD,CAAxB,CAA/B;EACH;AACJ;;AACD,MAAMY,YAAN,SAA2BhB,OAA3B,CAAmC;EAC/BiB,KAAK,GAAG;IACJ,MAAM;MAAEV;IAAF,IAAc,KAAKJ,IAAzB;IACA,IAAI,CAACI,OAAL,EACI;IACJ,KAAKW,OAAL,GAAepB,KAAK,CAACS,OAAD,EAAU,CAACY,QAAD,EAAWC,UAAX,KAA0B;MACpDlB,gBAAgB,CAAC,KAAKC,IAAN,EAAYiB,UAAZ,EAAwB,OAAxB,CAAhB;MACA,OAAO,CAACC,QAAD;QAAA,IAAW;UAAEC;QAAF,CAAX;QAAA,OAA2BpB,gBAAgB,CAAC,KAAKC,IAAN,EAAYkB,QAAZ,EAAsBC,OAAO,GAAG,KAAH,GAAW,QAAxC,CAA3C;MAAA,CAAP;IACH,CAHmB,EAGjB;MAAEC,eAAe,EAAE,KAAKpB,IAAL,CAAUG,KAAV,CAAgBkB;IAAnC,CAHiB,CAApB;EAIH;;EACDN,OAAO,GAAG,CAAG;;AAVkB;;AAanC,SAASF,YAAT"},"metadata":{},"sourceType":"module"}