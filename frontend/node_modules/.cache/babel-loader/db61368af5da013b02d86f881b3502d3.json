{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aweso\\\\OneDrive\\\\Desktop\\\\QuickMeds\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Products\\\\NonPharmacyProducts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SaveButton from '../../../components/buttons/SaveButton';\nimport CancelButton from '../../../components/buttons/CancelButton';\nimport PrintButton from '../../../components/buttons/PrintButton';\nimport NewButton from '../../../components/buttons/NewButton';\nimport Input from '../../../components/form/Input';\nimport Select from '../../../components/form/Select';\nimport DoubleInput from '../../../components/form/DoubleInput';\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\nimport ModalHeading from '../../../components/headings/ModalHeading';\nimport RefreshButton from '../../../components/buttons/RefreshButton';\nimport TableRow from '../../../components/TableRow';\nimport EditButton from '../../../components/buttons/EditButton';\nimport DeleteButton from '../../../components/buttons/DeleteButton';\nimport { toast } from 'react-toastify';\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\nimport AddModal from '../../../components/modals/AddModal';\nimport { BiEdit } from 'react-icons/bi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy'; // Custom EditButton component for NonPharmacy products\n\nconst EditNonPharmacyButton = _ref => {\n  _s();\n\n  let {\n    id,\n    onUpdate\n  } = _ref;\n  const [product, setProduct] = useState({});\n  const [categories, setCategories] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [unitTypes, setUnitTypes] = useState([]);\n  const [modalId, setModalId] = useState(`update-non-pharmacy-product-${id}`); // Update modalId when id changes\n\n  useEffect(() => {\n    setModalId(`update-non-pharmacy-product-${id}`);\n  }, [id]);\n  useEffect(() => {\n    if (!id) return;\n    fetch(`${API_BASE_URL}/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      setProduct(data);\n    }).catch(error => {\n      console.error(\"Error fetching product:\", error);\n      toast.error(\"Failed to load product data\");\n    });\n  }, [id]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/setup/categories', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      setCategories(data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n      toast.error(\"Failed to load categories\");\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/setup/companies', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      setCompanies(data);\n    }).catch(error => {\n      console.error(\"Error fetching companies:\", error);\n      toast.error(\"Failed to load companies\");\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/setup/unitTypes', {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      setUnitTypes(data);\n    }).catch(error => {\n      console.error(\"Error fetching unit types:\", error);\n      toast.error(\"Failed to load unit types\");\n    });\n  }, []);\n\n  const handleUpdate = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const productDetails = Object.fromEntries(formData.entries());\n    fetch(`${API_BASE_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(productDetails)\n    }).then(response => {\n      if (!response.ok) throw new Error('Update failed');\n      return response.json();\n    }).then(data => {\n      toast.success(`Product updated successfully`);\n      document.getElementById(modalId).checked = false;\n      if (onUpdate) onUpdate(); // Refresh the product list\n    }).catch(error => {\n      console.error('Error updating product:', error);\n      toast.error('Failed to update product');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: modalId,\n      className: \"modal-toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: modalId,\n      className: \"modal cursor-pointer\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\",\n        htmlFor: \"\",\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          modalId: modalId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeading, {\n          modalHeading: `Update ${product.Product_name || 'Product'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-1 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              title: 'Product Name',\n              type: \"text\",\n              value: product.Product_name,\n              name: \"Product_name\",\n              isRequired: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Category',\n              name: \"Category\",\n              isRequired: \"required\",\n              options: categories.map(c => c.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Company',\n              name: \"Company\",\n              isRequired: \"required\",\n              options: companies.map(c => c.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Stock',\n              type: \"number\",\n              value: product.Stock,\n              name: \"Stock\",\n              isRequired: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              title: 'Pack Type',\n              name: \"Pack_Type\",\n              isRequired: \"required\",\n              options: unitTypes.map(u => u.Name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack TP',\n              type: \"number\",\n              value: product.Pack_TP,\n              name: \"Pack_TP\",\n              isRequired: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              title: 'Pack MRP',\n              type: \"number\",\n              value: product.Pack_MRP,\n              name: \"Pack_MRP\",\n              isRequired: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(SaveButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n              type: \"button\",\n              onClick: () => document.getElementById(modalId).checked = false,\n              extraClass: \"ml-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: modalId,\n      className: \"btn btn-xs btn-ghost\",\n      children: /*#__PURE__*/_jsxDEV(BiEdit, {\n        className: \"text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditNonPharmacyButton, \"rX/FIVzwxb2eLkCEZfy7vyxWoMU=\");\n\n_c = EditNonPharmacyButton;\n\nconst NonPharmacyProducts = () => {\n  _s2();\n\n  const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const productsPerPage = 10;\n  const maxVisiblePages = 5; // Only show 5 pages at a time\n  // Fetch Non-Pharmacy Products\n\n  const fetchProducts = async page => {\n    try {\n      const response = await fetch(`${API_BASE_URL}?page=${page}&limit=${productsPerPage}`);\n      const data = await response.json();\n\n      if (response.ok) {\n        setNonPharmacyProducts(data.data);\n        setTotalProducts(data.totalItems || 0);\n        setTotalPages(data.totalPages || 1);\n      } else {\n        console.error('Unexpected response format:', data);\n        setNonPharmacyProducts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching non-pharmacy products:', error);\n    }\n  }; // Fetch data when the page changes\n\n\n  useEffect(() => {\n    fetchProducts(currentPage);\n  }, [currentPage]); // Add New Product\n\n  const addNonPharmacyProduct = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const productDetails = Object.fromEntries(formData.entries());\n    productDetails.addedBy = 'admin';\n    productDetails.addedToDbAt = new Date().toISOString();\n\n    try {\n      const response = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productDetails)\n      });\n\n      if (response.ok) {\n        toast( /*#__PURE__*/_jsxDEV(AddModal, {\n          name: productDetails.tradeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 23\n        }, this));\n        fetchProducts(currentPage); // Refresh the product list\n      } else {\n        console.error('Error adding product:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n\n    event.target.reset();\n  }; // Pagination controls\n\n\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  }; // Render optimized pagination with ellipsis\n\n\n  const renderPagination = () => {\n    const pages = [];\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    } // \"Previous\" button\n\n\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn btn-sm ${currentPage === 1 ? 'btn-disabled' : ''}`,\n      onClick: () => handlePageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, \"prev\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)); // First page and ellipsis\n\n    if (startPage > 1) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-sm ${currentPage === 1 ? 'btn-active' : ''}`,\n        onClick: () => handlePageChange(1),\n        children: \"1\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this));\n\n      if (startPage > 2) {\n        pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn btn-sm btn-disabled\",\n          children: \"...\"\n        }, \"start-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 28\n        }, this));\n      }\n    } // Middle pages\n\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-sm ${currentPage === i ? 'btn-active' : ''}`,\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this));\n    } // Last page and ellipsis\n\n\n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        pages.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn btn-sm btn-disabled\",\n          children: \"...\"\n        }, \"end-ellipsis\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 28\n        }, this));\n      }\n\n      pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-sm ${currentPage === totalPages ? 'btn-active' : ''}`,\n        onClick: () => handlePageChange(totalPages),\n        children: totalPages\n      }, totalPages, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this));\n    } // \"Next\" button\n\n\n    pages.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn btn-sm ${currentPage === totalPages ? 'btn-disabled' : ''}`,\n      onClick: () => handlePageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, \"next\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this));\n    return pages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"p-4 mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardPageHeading, {\n      name: `Non Pharmacy Products (${totalProducts})`,\n      value: totalProducts,\n      buttons: [/*#__PURE__*/_jsxDEV(NewButton, {\n        modalId: \"create-new-product\"\n      }, \"new-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {\n        onClick: () => fetchProducts(currentPage)\n      }, \"refresh-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PrintButton, {}, \"print-button\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-zebra table-compact\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: ['SN', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-xs md:text-2xs lg:text-md\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: nonPharmacyProducts.map((product, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          tableRowsData: [(currentPage - 1) * productsPerPage + index + 1, product.Product_name || 'N/A', product.Category || 'N/A', product.Company || 'N/A', product.Stock || 'N/A', product.Pack_Type || 'N/A', product.Pack_TP || 'N/A', product.Pack_MRP || 'N/A', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center gap-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(EditNonPharmacyButton, {\n              id: product._id,\n              onUpdate: () => fetchProducts(currentPage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n              deleteApiLink: `${API_BASE_URL}/${product._id}`,\n              itemId: product._id,\n              name: product.Product_name,\n              onDelete: () => fetchProducts(currentPage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this)]\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-4 gap-2\",\n      children: renderPagination()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(NonPharmacyProducts, \"xegHfJlmBNVIYuuHg1hUd2R0eAg=\");\n\n_c2 = NonPharmacyProducts;\nexport default NonPharmacyProducts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditNonPharmacyButton\");\n$RefreshReg$(_c2, \"NonPharmacyProducts\");","map":{"version":3,"names":["React","useState","useEffect","SaveButton","CancelButton","PrintButton","NewButton","Input","Select","DoubleInput","ModalCloseButton","ModalHeading","RefreshButton","TableRow","EditButton","DeleteButton","toast","DashboardPageHeading","AddModal","BiEdit","API_BASE_URL","EditNonPharmacyButton","id","onUpdate","product","setProduct","categories","setCategories","companies","setCompanies","unitTypes","setUnitTypes","modalId","setModalId","fetch","headers","localStorage","getItem","then","res","ok","Error","status","json","data","catch","error","console","handleUpdate","event","preventDefault","formData","FormData","target","productDetails","Object","fromEntries","entries","method","body","JSON","stringify","response","success","document","getElementById","checked","Product_name","map","c","Name","Stock","u","Pack_TP","Pack_MRP","NonPharmacyProducts","nonPharmacyProducts","setNonPharmacyProducts","currentPage","setCurrentPage","totalProducts","setTotalProducts","totalPages","setTotalPages","productsPerPage","maxVisiblePages","fetchProducts","page","totalItems","addNonPharmacyProduct","addedBy","addedToDbAt","Date","toISOString","tradeName","reset","handlePageChange","newPage","renderPagination","pages","startPage","Math","max","floor","endPage","min","push","i","item","index","Category","Company","Pack_Type","_id"],"sources":["C:/Users/aweso/OneDrive/Desktop/QuickMeds/frontend/src/pages/Dashboard/Products/NonPharmacyProducts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SaveButton from '../../../components/buttons/SaveButton';\r\nimport CancelButton from '../../../components/buttons/CancelButton';\r\nimport PrintButton from '../../../components/buttons/PrintButton';\r\nimport NewButton from '../../../components/buttons/NewButton';\r\nimport Input from '../../../components/form/Input';\r\nimport Select from '../../../components/form/Select';\r\nimport DoubleInput from '../../../components/form/DoubleInput';\r\nimport ModalCloseButton from '../../../components/buttons/ModalCloseButton';\r\nimport ModalHeading from '../../../components/headings/ModalHeading';\r\nimport RefreshButton from '../../../components/buttons/RefreshButton';\r\nimport TableRow from '../../../components/TableRow';\r\nimport EditButton from '../../../components/buttons/EditButton';\r\nimport DeleteButton from '../../../components/buttons/DeleteButton';\r\nimport { toast } from 'react-toastify';\r\nimport DashboardPageHeading from '../../../components/headings/DashboardPageHeading';\r\nimport AddModal from '../../../components/modals/AddModal';\r\nimport { BiEdit } from 'react-icons/bi';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/products/nonPharmacy';\r\n\r\n// Custom EditButton component for NonPharmacy products\r\nconst EditNonPharmacyButton = ({ id, onUpdate }) => {\r\n    const [product, setProduct] = useState({});\r\n    const [categories, setCategories] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [unitTypes, setUnitTypes] = useState([]);\r\n    const [modalId, setModalId] = useState(`update-non-pharmacy-product-${id}`);\r\n\r\n    // Update modalId when id changes\r\n    useEffect(() => {\r\n        setModalId(`update-non-pharmacy-product-${id}`);\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (!id) return;\r\n        \r\n        fetch(`${API_BASE_URL}/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setProduct(data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching product:\", error);\r\n            toast.error(\"Failed to load product data\");\r\n        });\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/setup/categories', {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setCategories(data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching categories:\", error);\r\n            toast.error(\"Failed to load categories\");\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/setup/companies', {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setCompanies(data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching companies:\", error);\r\n            toast.error(\"Failed to load companies\");\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/setup/unitTypes', {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`);\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setUnitTypes(data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching unit types:\", error);\r\n            toast.error(\"Failed to load unit types\");\r\n        });\r\n    }, []);\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const productDetails = Object.fromEntries(formData.entries());\r\n\r\n        fetch(`${API_BASE_URL}/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(productDetails),\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) throw new Error('Update failed');\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            toast.success(`Product updated successfully`);\r\n            document.getElementById(modalId).checked = false;\r\n            if (onUpdate) onUpdate(); // Refresh the product list\r\n        })\r\n        .catch(error => {\r\n            console.error('Error updating product:', error);\r\n            toast.error('Failed to update product');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" id={modalId} className=\"modal-toggle\" />\r\n            <label htmlFor={modalId} className=\"modal cursor-pointer\">\r\n                <label className=\"modal-box lg:w-7/12 md:w-10/12 w-11/12 max-w-4xl relative\" htmlFor=\"\">\r\n                    <ModalCloseButton modalId={modalId} />\r\n                    <ModalHeading modalHeading={`Update ${product.Product_name || 'Product'}`} />\r\n\r\n                    <form onSubmit={handleUpdate}>\r\n                        <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-1 mb-2'>\r\n                            <Input title={'Product Name'} type='text' value={product.Product_name} name='Product_name' isRequired='required' />\r\n                            <Select title={'Category'} name='Category' isRequired='required' options={categories.map(c => c.Name)} />\r\n                            <Select title={'Company'} name='Company' isRequired='required' options={companies.map(c => c.Name)} />\r\n                            <Input title={'Stock'} type='number' value={product.Stock} name='Stock' isRequired='required' />\r\n                            <Select title={'Pack Type'} name='Pack_Type' isRequired='required' options={unitTypes.map(u => u.Name)} />\r\n                            <Input title={'Pack TP'} type='number' value={product.Pack_TP} name='Pack_TP' isRequired='required' />\r\n                            <Input title={'Pack MRP'} type='number' value={product.Pack_MRP} name='Pack_MRP' isRequired='required' />\r\n                        </div>\r\n                        <div className=\"flex justify-end mt-4\">\r\n                            <SaveButton type=\"submit\" />\r\n                            <CancelButton \r\n                                type=\"button\" \r\n                                onClick={() => document.getElementById(modalId).checked = false} \r\n                                extraClass=\"ml-2\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </label>\r\n            </label>\r\n\r\n            <label htmlFor={modalId} className=\"btn btn-xs btn-ghost\">\r\n                <BiEdit className=\"text-blue-500\" />\r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\nconst NonPharmacyProducts = () => {\r\n    const [nonPharmacyProducts, setNonPharmacyProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalProducts, setTotalProducts] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const productsPerPage = 10;\r\n    const maxVisiblePages = 5; // Only show 5 pages at a time\r\n\r\n    // Fetch Non-Pharmacy Products\r\n    const fetchProducts = async (page) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}?page=${page}&limit=${productsPerPage}`);\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setNonPharmacyProducts(data.data);\r\n                setTotalProducts(data.totalItems || 0);\r\n                setTotalPages(data.totalPages || 1);\r\n            } else {\r\n                console.error('Unexpected response format:', data);\r\n                setNonPharmacyProducts([]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching non-pharmacy products:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch data when the page changes\r\n    useEffect(() => {\r\n        fetchProducts(currentPage);\r\n    }, [currentPage]);\r\n\r\n    // Add New Product\r\n    const addNonPharmacyProduct = async (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const productDetails = Object.fromEntries(formData.entries());\r\n\r\n        productDetails.addedBy = 'admin';\r\n        productDetails.addedToDbAt = new Date().toISOString();\r\n\r\n        try {\r\n            const response = await fetch(API_BASE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(productDetails),\r\n            });\r\n\r\n            if (response.ok) {\r\n                toast(<AddModal name={productDetails.tradeName} />);\r\n                fetchProducts(currentPage); // Refresh the product list\r\n            } else {\r\n                console.error('Error adding product:', await response.json());\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n        event.target.reset();\r\n    };\r\n\r\n    // Pagination controls\r\n    const handlePageChange = (newPage) => {\r\n        if (newPage >= 1 && newPage <= totalPages) {\r\n            setCurrentPage(newPage);\r\n        }\r\n    };\r\n\r\n    // Render optimized pagination with ellipsis\r\n    const renderPagination = () => {\r\n        const pages = [];\r\n        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\r\n\r\n        if (endPage - startPage + 1 < maxVisiblePages) {\r\n            startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n        }\r\n\r\n        // \"Previous\" button\r\n        pages.push(\r\n            <button\r\n                key=\"prev\"\r\n                className={`btn btn-sm ${currentPage === 1 ? 'btn-disabled' : ''}`}\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            >\r\n                Previous\r\n            </button>\r\n        );\r\n\r\n        // First page and ellipsis\r\n        if (startPage > 1) {\r\n            pages.push(\r\n                <button key={1} className={`btn btn-sm ${currentPage === 1 ? 'btn-active' : ''}`} onClick={() => handlePageChange(1)}>\r\n                    1\r\n                </button>\r\n            );\r\n            if (startPage > 2) {\r\n                pages.push(<span key=\"start-ellipsis\" className=\"btn btn-sm btn-disabled\">...</span>);\r\n            }\r\n        }\r\n\r\n        // Middle pages\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            pages.push(\r\n                <button key={i} className={`btn btn-sm ${currentPage === i ? 'btn-active' : ''}`} onClick={() => handlePageChange(i)}>\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        // Last page and ellipsis\r\n        if (endPage < totalPages) {\r\n            if (endPage < totalPages - 1) {\r\n                pages.push(<span key=\"end-ellipsis\" className=\"btn btn-sm btn-disabled\">...</span>);\r\n            }\r\n            pages.push(\r\n                <button key={totalPages} className={`btn btn-sm ${currentPage === totalPages ? 'btn-active' : ''}`} onClick={() => handlePageChange(totalPages)}>\r\n                    {totalPages}\r\n                </button>\r\n            );\r\n        }\r\n\r\n        // \"Next\" button\r\n        pages.push(\r\n            <button\r\n                key=\"next\"\r\n                className={`btn btn-sm ${currentPage === totalPages ? 'btn-disabled' : ''}`}\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            >\r\n                Next\r\n            </button>\r\n        );\r\n\r\n        return pages;\r\n    };\r\n\r\n    return (\r\n        <section className='p-4 mt-16'>\r\n            <DashboardPageHeading\r\n                name={`Non Pharmacy Products (${totalProducts})`}\r\n                value={totalProducts}\r\n                buttons={[\r\n                    <NewButton key=\"new-button\" modalId='create-new-product' />,\r\n                    <RefreshButton key=\"refresh-button\" onClick={() => fetchProducts(currentPage)} />,\r\n                    <PrintButton key=\"print-button\" />\r\n                ]}\r\n            />\r\n\r\n            {/* Products Table */}\r\n            <table className=\"table table-zebra table-compact\">\r\n                <thead>\r\n                    <tr>\r\n                        {['SN', 'Product Name', 'Category', 'Company', 'Stock', 'Pack Type', 'Pack TP', 'Pack MRP', 'Actions'].map((item, index) => (\r\n                            <th key={index} className='text-xs md:text-2xs lg:text-md'>{item}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {nonPharmacyProducts.map((product, index) => (\r\n                        <TableRow\r\n                            key={product._id}\r\n                            tableRowsData={[\r\n                                (currentPage - 1) * productsPerPage + index + 1,\r\n                                product.Product_name || 'N/A',\r\n                                product.Category || 'N/A',\r\n                                product.Company || 'N/A',\r\n                                product.Stock || 'N/A',\r\n                                product.Pack_Type || 'N/A',\r\n                                product.Pack_TP || 'N/A',\r\n                                product.Pack_MRP || 'N/A',\r\n                                <span className='flex items-center gap-x-1'>\r\n                                    <EditNonPharmacyButton \r\n                                        id={product._id} \r\n                                        onUpdate={() => fetchProducts(currentPage)}\r\n                                    />\r\n                                    <DeleteButton \r\n                                        deleteApiLink={`${API_BASE_URL}/${product._id}`} \r\n                                        itemId={product._id} \r\n                                        name={product.Product_name} \r\n                                        onDelete={() => fetchProducts(currentPage)}\r\n                                    />\r\n                                </span>\r\n                            ]}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"flex justify-center mt-4 gap-2\">\r\n                {renderPagination()}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default NonPharmacyProducts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}